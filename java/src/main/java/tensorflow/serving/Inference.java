// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow_serving/apis/inference.proto

package tensorflow.serving;

public final class Inference {
  private Inference() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface InferenceTaskOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.serving.InferenceTask)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Model Specification. If version is not specified, will use the latest
     * (numerical) version.
     * All ModelSpecs in a MultiInferenceRequest must access the same model name.
     * </pre>
     *
     * <code>.tensorflow.serving.ModelSpec model_spec = 1;</code>
     * @return Whether the modelSpec field is set.
     */
    boolean hasModelSpec();
    /**
     * <pre>
     * Model Specification. If version is not specified, will use the latest
     * (numerical) version.
     * All ModelSpecs in a MultiInferenceRequest must access the same model name.
     * </pre>
     *
     * <code>.tensorflow.serving.ModelSpec model_spec = 1;</code>
     * @return The modelSpec.
     */
    tensorflow.serving.Model.ModelSpec getModelSpec();
    /**
     * <pre>
     * Model Specification. If version is not specified, will use the latest
     * (numerical) version.
     * All ModelSpecs in a MultiInferenceRequest must access the same model name.
     * </pre>
     *
     * <code>.tensorflow.serving.ModelSpec model_spec = 1;</code>
     */
    tensorflow.serving.Model.ModelSpecOrBuilder getModelSpecOrBuilder();

    /**
     * <pre>
     * Signature's method_name. Should be one of the method names defined in
     * third_party/tensorflow/python/saved_model/signature_constants.py.
     * e.g. "tensorflow/serving/classify".
     * </pre>
     *
     * <code>string method_name = 2;</code>
     * @return The methodName.
     */
    java.lang.String getMethodName();
    /**
     * <pre>
     * Signature's method_name. Should be one of the method names defined in
     * third_party/tensorflow/python/saved_model/signature_constants.py.
     * e.g. "tensorflow/serving/classify".
     * </pre>
     *
     * <code>string method_name = 2;</code>
     * @return The bytes for methodName.
     */
    com.google.protobuf.ByteString
        getMethodNameBytes();
  }
  /**
   * <pre>
   * Inference request such as classification, regression, etc...
   * </pre>
   *
   * Protobuf type {@code tensorflow.serving.InferenceTask}
   */
  public static final class InferenceTask extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.serving.InferenceTask)
      InferenceTaskOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use InferenceTask.newBuilder() to construct.
    private InferenceTask(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private InferenceTask() {
      methodName_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new InferenceTask();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private InferenceTask(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              tensorflow.serving.Model.ModelSpec.Builder subBuilder = null;
              if (modelSpec_ != null) {
                subBuilder = modelSpec_.toBuilder();
              }
              modelSpec_ = input.readMessage(tensorflow.serving.Model.ModelSpec.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(modelSpec_);
                modelSpec_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              methodName_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.serving.Inference.internal_static_tensorflow_serving_InferenceTask_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.serving.Inference.internal_static_tensorflow_serving_InferenceTask_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.serving.Inference.InferenceTask.class, tensorflow.serving.Inference.InferenceTask.Builder.class);
    }

    public static final int MODEL_SPEC_FIELD_NUMBER = 1;
    private tensorflow.serving.Model.ModelSpec modelSpec_;
    /**
     * <pre>
     * Model Specification. If version is not specified, will use the latest
     * (numerical) version.
     * All ModelSpecs in a MultiInferenceRequest must access the same model name.
     * </pre>
     *
     * <code>.tensorflow.serving.ModelSpec model_spec = 1;</code>
     * @return Whether the modelSpec field is set.
     */
    @java.lang.Override
    public boolean hasModelSpec() {
      return modelSpec_ != null;
    }
    /**
     * <pre>
     * Model Specification. If version is not specified, will use the latest
     * (numerical) version.
     * All ModelSpecs in a MultiInferenceRequest must access the same model name.
     * </pre>
     *
     * <code>.tensorflow.serving.ModelSpec model_spec = 1;</code>
     * @return The modelSpec.
     */
    @java.lang.Override
    public tensorflow.serving.Model.ModelSpec getModelSpec() {
      return modelSpec_ == null ? tensorflow.serving.Model.ModelSpec.getDefaultInstance() : modelSpec_;
    }
    /**
     * <pre>
     * Model Specification. If version is not specified, will use the latest
     * (numerical) version.
     * All ModelSpecs in a MultiInferenceRequest must access the same model name.
     * </pre>
     *
     * <code>.tensorflow.serving.ModelSpec model_spec = 1;</code>
     */
    @java.lang.Override
    public tensorflow.serving.Model.ModelSpecOrBuilder getModelSpecOrBuilder() {
      return getModelSpec();
    }

    public static final int METHOD_NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object methodName_;
    /**
     * <pre>
     * Signature's method_name. Should be one of the method names defined in
     * third_party/tensorflow/python/saved_model/signature_constants.py.
     * e.g. "tensorflow/serving/classify".
     * </pre>
     *
     * <code>string method_name = 2;</code>
     * @return The methodName.
     */
    @java.lang.Override
    public java.lang.String getMethodName() {
      java.lang.Object ref = methodName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        methodName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Signature's method_name. Should be one of the method names defined in
     * third_party/tensorflow/python/saved_model/signature_constants.py.
     * e.g. "tensorflow/serving/classify".
     * </pre>
     *
     * <code>string method_name = 2;</code>
     * @return The bytes for methodName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getMethodNameBytes() {
      java.lang.Object ref = methodName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        methodName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (modelSpec_ != null) {
        output.writeMessage(1, getModelSpec());
      }
      if (!getMethodNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, methodName_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (modelSpec_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getModelSpec());
      }
      if (!getMethodNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, methodName_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.serving.Inference.InferenceTask)) {
        return super.equals(obj);
      }
      tensorflow.serving.Inference.InferenceTask other = (tensorflow.serving.Inference.InferenceTask) obj;

      if (hasModelSpec() != other.hasModelSpec()) return false;
      if (hasModelSpec()) {
        if (!getModelSpec()
            .equals(other.getModelSpec())) return false;
      }
      if (!getMethodName()
          .equals(other.getMethodName())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasModelSpec()) {
        hash = (37 * hash) + MODEL_SPEC_FIELD_NUMBER;
        hash = (53 * hash) + getModelSpec().hashCode();
      }
      hash = (37 * hash) + METHOD_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getMethodName().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.serving.Inference.InferenceTask parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.serving.Inference.InferenceTask parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.serving.Inference.InferenceTask parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.serving.Inference.InferenceTask parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.serving.Inference.InferenceTask parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.serving.Inference.InferenceTask parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.serving.Inference.InferenceTask parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.serving.Inference.InferenceTask parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.serving.Inference.InferenceTask parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tensorflow.serving.Inference.InferenceTask parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.serving.Inference.InferenceTask parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.serving.Inference.InferenceTask parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.serving.Inference.InferenceTask prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Inference request such as classification, regression, etc...
     * </pre>
     *
     * Protobuf type {@code tensorflow.serving.InferenceTask}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.serving.InferenceTask)
        tensorflow.serving.Inference.InferenceTaskOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.serving.Inference.internal_static_tensorflow_serving_InferenceTask_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.serving.Inference.internal_static_tensorflow_serving_InferenceTask_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.serving.Inference.InferenceTask.class, tensorflow.serving.Inference.InferenceTask.Builder.class);
      }

      // Construct using tensorflow.serving.Inference.InferenceTask.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (modelSpecBuilder_ == null) {
          modelSpec_ = null;
        } else {
          modelSpec_ = null;
          modelSpecBuilder_ = null;
        }
        methodName_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.serving.Inference.internal_static_tensorflow_serving_InferenceTask_descriptor;
      }

      @java.lang.Override
      public tensorflow.serving.Inference.InferenceTask getDefaultInstanceForType() {
        return tensorflow.serving.Inference.InferenceTask.getDefaultInstance();
      }

      @java.lang.Override
      public tensorflow.serving.Inference.InferenceTask build() {
        tensorflow.serving.Inference.InferenceTask result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public tensorflow.serving.Inference.InferenceTask buildPartial() {
        tensorflow.serving.Inference.InferenceTask result = new tensorflow.serving.Inference.InferenceTask(this);
        if (modelSpecBuilder_ == null) {
          result.modelSpec_ = modelSpec_;
        } else {
          result.modelSpec_ = modelSpecBuilder_.build();
        }
        result.methodName_ = methodName_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.serving.Inference.InferenceTask) {
          return mergeFrom((tensorflow.serving.Inference.InferenceTask)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.serving.Inference.InferenceTask other) {
        if (other == tensorflow.serving.Inference.InferenceTask.getDefaultInstance()) return this;
        if (other.hasModelSpec()) {
          mergeModelSpec(other.getModelSpec());
        }
        if (!other.getMethodName().isEmpty()) {
          methodName_ = other.methodName_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tensorflow.serving.Inference.InferenceTask parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tensorflow.serving.Inference.InferenceTask) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private tensorflow.serving.Model.ModelSpec modelSpec_;
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.serving.Model.ModelSpec, tensorflow.serving.Model.ModelSpec.Builder, tensorflow.serving.Model.ModelSpecOrBuilder> modelSpecBuilder_;
      /**
       * <pre>
       * Model Specification. If version is not specified, will use the latest
       * (numerical) version.
       * All ModelSpecs in a MultiInferenceRequest must access the same model name.
       * </pre>
       *
       * <code>.tensorflow.serving.ModelSpec model_spec = 1;</code>
       * @return Whether the modelSpec field is set.
       */
      public boolean hasModelSpec() {
        return modelSpecBuilder_ != null || modelSpec_ != null;
      }
      /**
       * <pre>
       * Model Specification. If version is not specified, will use the latest
       * (numerical) version.
       * All ModelSpecs in a MultiInferenceRequest must access the same model name.
       * </pre>
       *
       * <code>.tensorflow.serving.ModelSpec model_spec = 1;</code>
       * @return The modelSpec.
       */
      public tensorflow.serving.Model.ModelSpec getModelSpec() {
        if (modelSpecBuilder_ == null) {
          return modelSpec_ == null ? tensorflow.serving.Model.ModelSpec.getDefaultInstance() : modelSpec_;
        } else {
          return modelSpecBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Model Specification. If version is not specified, will use the latest
       * (numerical) version.
       * All ModelSpecs in a MultiInferenceRequest must access the same model name.
       * </pre>
       *
       * <code>.tensorflow.serving.ModelSpec model_spec = 1;</code>
       */
      public Builder setModelSpec(tensorflow.serving.Model.ModelSpec value) {
        if (modelSpecBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          modelSpec_ = value;
          onChanged();
        } else {
          modelSpecBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Model Specification. If version is not specified, will use the latest
       * (numerical) version.
       * All ModelSpecs in a MultiInferenceRequest must access the same model name.
       * </pre>
       *
       * <code>.tensorflow.serving.ModelSpec model_spec = 1;</code>
       */
      public Builder setModelSpec(
          tensorflow.serving.Model.ModelSpec.Builder builderForValue) {
        if (modelSpecBuilder_ == null) {
          modelSpec_ = builderForValue.build();
          onChanged();
        } else {
          modelSpecBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Model Specification. If version is not specified, will use the latest
       * (numerical) version.
       * All ModelSpecs in a MultiInferenceRequest must access the same model name.
       * </pre>
       *
       * <code>.tensorflow.serving.ModelSpec model_spec = 1;</code>
       */
      public Builder mergeModelSpec(tensorflow.serving.Model.ModelSpec value) {
        if (modelSpecBuilder_ == null) {
          if (modelSpec_ != null) {
            modelSpec_ =
              tensorflow.serving.Model.ModelSpec.newBuilder(modelSpec_).mergeFrom(value).buildPartial();
          } else {
            modelSpec_ = value;
          }
          onChanged();
        } else {
          modelSpecBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Model Specification. If version is not specified, will use the latest
       * (numerical) version.
       * All ModelSpecs in a MultiInferenceRequest must access the same model name.
       * </pre>
       *
       * <code>.tensorflow.serving.ModelSpec model_spec = 1;</code>
       */
      public Builder clearModelSpec() {
        if (modelSpecBuilder_ == null) {
          modelSpec_ = null;
          onChanged();
        } else {
          modelSpec_ = null;
          modelSpecBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Model Specification. If version is not specified, will use the latest
       * (numerical) version.
       * All ModelSpecs in a MultiInferenceRequest must access the same model name.
       * </pre>
       *
       * <code>.tensorflow.serving.ModelSpec model_spec = 1;</code>
       */
      public tensorflow.serving.Model.ModelSpec.Builder getModelSpecBuilder() {
        
        onChanged();
        return getModelSpecFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Model Specification. If version is not specified, will use the latest
       * (numerical) version.
       * All ModelSpecs in a MultiInferenceRequest must access the same model name.
       * </pre>
       *
       * <code>.tensorflow.serving.ModelSpec model_spec = 1;</code>
       */
      public tensorflow.serving.Model.ModelSpecOrBuilder getModelSpecOrBuilder() {
        if (modelSpecBuilder_ != null) {
          return modelSpecBuilder_.getMessageOrBuilder();
        } else {
          return modelSpec_ == null ?
              tensorflow.serving.Model.ModelSpec.getDefaultInstance() : modelSpec_;
        }
      }
      /**
       * <pre>
       * Model Specification. If version is not specified, will use the latest
       * (numerical) version.
       * All ModelSpecs in a MultiInferenceRequest must access the same model name.
       * </pre>
       *
       * <code>.tensorflow.serving.ModelSpec model_spec = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.serving.Model.ModelSpec, tensorflow.serving.Model.ModelSpec.Builder, tensorflow.serving.Model.ModelSpecOrBuilder> 
          getModelSpecFieldBuilder() {
        if (modelSpecBuilder_ == null) {
          modelSpecBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              tensorflow.serving.Model.ModelSpec, tensorflow.serving.Model.ModelSpec.Builder, tensorflow.serving.Model.ModelSpecOrBuilder>(
                  getModelSpec(),
                  getParentForChildren(),
                  isClean());
          modelSpec_ = null;
        }
        return modelSpecBuilder_;
      }

      private java.lang.Object methodName_ = "";
      /**
       * <pre>
       * Signature's method_name. Should be one of the method names defined in
       * third_party/tensorflow/python/saved_model/signature_constants.py.
       * e.g. "tensorflow/serving/classify".
       * </pre>
       *
       * <code>string method_name = 2;</code>
       * @return The methodName.
       */
      public java.lang.String getMethodName() {
        java.lang.Object ref = methodName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          methodName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Signature's method_name. Should be one of the method names defined in
       * third_party/tensorflow/python/saved_model/signature_constants.py.
       * e.g. "tensorflow/serving/classify".
       * </pre>
       *
       * <code>string method_name = 2;</code>
       * @return The bytes for methodName.
       */
      public com.google.protobuf.ByteString
          getMethodNameBytes() {
        java.lang.Object ref = methodName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          methodName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Signature's method_name. Should be one of the method names defined in
       * third_party/tensorflow/python/saved_model/signature_constants.py.
       * e.g. "tensorflow/serving/classify".
       * </pre>
       *
       * <code>string method_name = 2;</code>
       * @param value The methodName to set.
       * @return This builder for chaining.
       */
      public Builder setMethodName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        methodName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Signature's method_name. Should be one of the method names defined in
       * third_party/tensorflow/python/saved_model/signature_constants.py.
       * e.g. "tensorflow/serving/classify".
       * </pre>
       *
       * <code>string method_name = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearMethodName() {
        
        methodName_ = getDefaultInstance().getMethodName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Signature's method_name. Should be one of the method names defined in
       * third_party/tensorflow/python/saved_model/signature_constants.py.
       * e.g. "tensorflow/serving/classify".
       * </pre>
       *
       * <code>string method_name = 2;</code>
       * @param value The bytes for methodName to set.
       * @return This builder for chaining.
       */
      public Builder setMethodNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        methodName_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.serving.InferenceTask)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.serving.InferenceTask)
    private static final tensorflow.serving.Inference.InferenceTask DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.serving.Inference.InferenceTask();
    }

    public static tensorflow.serving.Inference.InferenceTask getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<InferenceTask>
        PARSER = new com.google.protobuf.AbstractParser<InferenceTask>() {
      @java.lang.Override
      public InferenceTask parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new InferenceTask(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<InferenceTask> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<InferenceTask> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public tensorflow.serving.Inference.InferenceTask getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface InferenceResultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.serving.InferenceResult)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.tensorflow.serving.ModelSpec model_spec = 1;</code>
     * @return Whether the modelSpec field is set.
     */
    boolean hasModelSpec();
    /**
     * <code>.tensorflow.serving.ModelSpec model_spec = 1;</code>
     * @return The modelSpec.
     */
    tensorflow.serving.Model.ModelSpec getModelSpec();
    /**
     * <code>.tensorflow.serving.ModelSpec model_spec = 1;</code>
     */
    tensorflow.serving.Model.ModelSpecOrBuilder getModelSpecOrBuilder();

    /**
     * <code>.tensorflow.serving.ClassificationResult classification_result = 2;</code>
     * @return Whether the classificationResult field is set.
     */
    boolean hasClassificationResult();
    /**
     * <code>.tensorflow.serving.ClassificationResult classification_result = 2;</code>
     * @return The classificationResult.
     */
    tensorflow.serving.Classification.ClassificationResult getClassificationResult();
    /**
     * <code>.tensorflow.serving.ClassificationResult classification_result = 2;</code>
     */
    tensorflow.serving.Classification.ClassificationResultOrBuilder getClassificationResultOrBuilder();

    /**
     * <code>.tensorflow.serving.RegressionResult regression_result = 3;</code>
     * @return Whether the regressionResult field is set.
     */
    boolean hasRegressionResult();
    /**
     * <code>.tensorflow.serving.RegressionResult regression_result = 3;</code>
     * @return The regressionResult.
     */
    tensorflow.serving.RegressionOuterClass.RegressionResult getRegressionResult();
    /**
     * <code>.tensorflow.serving.RegressionResult regression_result = 3;</code>
     */
    tensorflow.serving.RegressionOuterClass.RegressionResultOrBuilder getRegressionResultOrBuilder();

    public tensorflow.serving.Inference.InferenceResult.ResultCase getResultCase();
  }
  /**
   * <pre>
   * Inference result, matches the type of request or is an error.
   * </pre>
   *
   * Protobuf type {@code tensorflow.serving.InferenceResult}
   */
  public static final class InferenceResult extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.serving.InferenceResult)
      InferenceResultOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use InferenceResult.newBuilder() to construct.
    private InferenceResult(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private InferenceResult() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new InferenceResult();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private InferenceResult(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              tensorflow.serving.Model.ModelSpec.Builder subBuilder = null;
              if (modelSpec_ != null) {
                subBuilder = modelSpec_.toBuilder();
              }
              modelSpec_ = input.readMessage(tensorflow.serving.Model.ModelSpec.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(modelSpec_);
                modelSpec_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              tensorflow.serving.Classification.ClassificationResult.Builder subBuilder = null;
              if (resultCase_ == 2) {
                subBuilder = ((tensorflow.serving.Classification.ClassificationResult) result_).toBuilder();
              }
              result_ =
                  input.readMessage(tensorflow.serving.Classification.ClassificationResult.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((tensorflow.serving.Classification.ClassificationResult) result_);
                result_ = subBuilder.buildPartial();
              }
              resultCase_ = 2;
              break;
            }
            case 26: {
              tensorflow.serving.RegressionOuterClass.RegressionResult.Builder subBuilder = null;
              if (resultCase_ == 3) {
                subBuilder = ((tensorflow.serving.RegressionOuterClass.RegressionResult) result_).toBuilder();
              }
              result_ =
                  input.readMessage(tensorflow.serving.RegressionOuterClass.RegressionResult.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((tensorflow.serving.RegressionOuterClass.RegressionResult) result_);
                result_ = subBuilder.buildPartial();
              }
              resultCase_ = 3;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.serving.Inference.internal_static_tensorflow_serving_InferenceResult_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.serving.Inference.internal_static_tensorflow_serving_InferenceResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.serving.Inference.InferenceResult.class, tensorflow.serving.Inference.InferenceResult.Builder.class);
    }

    private int resultCase_ = 0;
    private java.lang.Object result_;
    public enum ResultCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      CLASSIFICATION_RESULT(2),
      REGRESSION_RESULT(3),
      RESULT_NOT_SET(0);
      private final int value;
      private ResultCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ResultCase valueOf(int value) {
        return forNumber(value);
      }

      public static ResultCase forNumber(int value) {
        switch (value) {
          case 2: return CLASSIFICATION_RESULT;
          case 3: return REGRESSION_RESULT;
          case 0: return RESULT_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public ResultCase
    getResultCase() {
      return ResultCase.forNumber(
          resultCase_);
    }

    public static final int MODEL_SPEC_FIELD_NUMBER = 1;
    private tensorflow.serving.Model.ModelSpec modelSpec_;
    /**
     * <code>.tensorflow.serving.ModelSpec model_spec = 1;</code>
     * @return Whether the modelSpec field is set.
     */
    @java.lang.Override
    public boolean hasModelSpec() {
      return modelSpec_ != null;
    }
    /**
     * <code>.tensorflow.serving.ModelSpec model_spec = 1;</code>
     * @return The modelSpec.
     */
    @java.lang.Override
    public tensorflow.serving.Model.ModelSpec getModelSpec() {
      return modelSpec_ == null ? tensorflow.serving.Model.ModelSpec.getDefaultInstance() : modelSpec_;
    }
    /**
     * <code>.tensorflow.serving.ModelSpec model_spec = 1;</code>
     */
    @java.lang.Override
    public tensorflow.serving.Model.ModelSpecOrBuilder getModelSpecOrBuilder() {
      return getModelSpec();
    }

    public static final int CLASSIFICATION_RESULT_FIELD_NUMBER = 2;
    /**
     * <code>.tensorflow.serving.ClassificationResult classification_result = 2;</code>
     * @return Whether the classificationResult field is set.
     */
    @java.lang.Override
    public boolean hasClassificationResult() {
      return resultCase_ == 2;
    }
    /**
     * <code>.tensorflow.serving.ClassificationResult classification_result = 2;</code>
     * @return The classificationResult.
     */
    @java.lang.Override
    public tensorflow.serving.Classification.ClassificationResult getClassificationResult() {
      if (resultCase_ == 2) {
         return (tensorflow.serving.Classification.ClassificationResult) result_;
      }
      return tensorflow.serving.Classification.ClassificationResult.getDefaultInstance();
    }
    /**
     * <code>.tensorflow.serving.ClassificationResult classification_result = 2;</code>
     */
    @java.lang.Override
    public tensorflow.serving.Classification.ClassificationResultOrBuilder getClassificationResultOrBuilder() {
      if (resultCase_ == 2) {
         return (tensorflow.serving.Classification.ClassificationResult) result_;
      }
      return tensorflow.serving.Classification.ClassificationResult.getDefaultInstance();
    }

    public static final int REGRESSION_RESULT_FIELD_NUMBER = 3;
    /**
     * <code>.tensorflow.serving.RegressionResult regression_result = 3;</code>
     * @return Whether the regressionResult field is set.
     */
    @java.lang.Override
    public boolean hasRegressionResult() {
      return resultCase_ == 3;
    }
    /**
     * <code>.tensorflow.serving.RegressionResult regression_result = 3;</code>
     * @return The regressionResult.
     */
    @java.lang.Override
    public tensorflow.serving.RegressionOuterClass.RegressionResult getRegressionResult() {
      if (resultCase_ == 3) {
         return (tensorflow.serving.RegressionOuterClass.RegressionResult) result_;
      }
      return tensorflow.serving.RegressionOuterClass.RegressionResult.getDefaultInstance();
    }
    /**
     * <code>.tensorflow.serving.RegressionResult regression_result = 3;</code>
     */
    @java.lang.Override
    public tensorflow.serving.RegressionOuterClass.RegressionResultOrBuilder getRegressionResultOrBuilder() {
      if (resultCase_ == 3) {
         return (tensorflow.serving.RegressionOuterClass.RegressionResult) result_;
      }
      return tensorflow.serving.RegressionOuterClass.RegressionResult.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (modelSpec_ != null) {
        output.writeMessage(1, getModelSpec());
      }
      if (resultCase_ == 2) {
        output.writeMessage(2, (tensorflow.serving.Classification.ClassificationResult) result_);
      }
      if (resultCase_ == 3) {
        output.writeMessage(3, (tensorflow.serving.RegressionOuterClass.RegressionResult) result_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (modelSpec_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getModelSpec());
      }
      if (resultCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (tensorflow.serving.Classification.ClassificationResult) result_);
      }
      if (resultCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (tensorflow.serving.RegressionOuterClass.RegressionResult) result_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.serving.Inference.InferenceResult)) {
        return super.equals(obj);
      }
      tensorflow.serving.Inference.InferenceResult other = (tensorflow.serving.Inference.InferenceResult) obj;

      if (hasModelSpec() != other.hasModelSpec()) return false;
      if (hasModelSpec()) {
        if (!getModelSpec()
            .equals(other.getModelSpec())) return false;
      }
      if (!getResultCase().equals(other.getResultCase())) return false;
      switch (resultCase_) {
        case 2:
          if (!getClassificationResult()
              .equals(other.getClassificationResult())) return false;
          break;
        case 3:
          if (!getRegressionResult()
              .equals(other.getRegressionResult())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasModelSpec()) {
        hash = (37 * hash) + MODEL_SPEC_FIELD_NUMBER;
        hash = (53 * hash) + getModelSpec().hashCode();
      }
      switch (resultCase_) {
        case 2:
          hash = (37 * hash) + CLASSIFICATION_RESULT_FIELD_NUMBER;
          hash = (53 * hash) + getClassificationResult().hashCode();
          break;
        case 3:
          hash = (37 * hash) + REGRESSION_RESULT_FIELD_NUMBER;
          hash = (53 * hash) + getRegressionResult().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.serving.Inference.InferenceResult parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.serving.Inference.InferenceResult parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.serving.Inference.InferenceResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.serving.Inference.InferenceResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.serving.Inference.InferenceResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.serving.Inference.InferenceResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.serving.Inference.InferenceResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.serving.Inference.InferenceResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.serving.Inference.InferenceResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tensorflow.serving.Inference.InferenceResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.serving.Inference.InferenceResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.serving.Inference.InferenceResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.serving.Inference.InferenceResult prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Inference result, matches the type of request or is an error.
     * </pre>
     *
     * Protobuf type {@code tensorflow.serving.InferenceResult}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.serving.InferenceResult)
        tensorflow.serving.Inference.InferenceResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.serving.Inference.internal_static_tensorflow_serving_InferenceResult_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.serving.Inference.internal_static_tensorflow_serving_InferenceResult_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.serving.Inference.InferenceResult.class, tensorflow.serving.Inference.InferenceResult.Builder.class);
      }

      // Construct using tensorflow.serving.Inference.InferenceResult.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (modelSpecBuilder_ == null) {
          modelSpec_ = null;
        } else {
          modelSpec_ = null;
          modelSpecBuilder_ = null;
        }
        resultCase_ = 0;
        result_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.serving.Inference.internal_static_tensorflow_serving_InferenceResult_descriptor;
      }

      @java.lang.Override
      public tensorflow.serving.Inference.InferenceResult getDefaultInstanceForType() {
        return tensorflow.serving.Inference.InferenceResult.getDefaultInstance();
      }

      @java.lang.Override
      public tensorflow.serving.Inference.InferenceResult build() {
        tensorflow.serving.Inference.InferenceResult result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public tensorflow.serving.Inference.InferenceResult buildPartial() {
        tensorflow.serving.Inference.InferenceResult result = new tensorflow.serving.Inference.InferenceResult(this);
        if (modelSpecBuilder_ == null) {
          result.modelSpec_ = modelSpec_;
        } else {
          result.modelSpec_ = modelSpecBuilder_.build();
        }
        if (resultCase_ == 2) {
          if (classificationResultBuilder_ == null) {
            result.result_ = result_;
          } else {
            result.result_ = classificationResultBuilder_.build();
          }
        }
        if (resultCase_ == 3) {
          if (regressionResultBuilder_ == null) {
            result.result_ = result_;
          } else {
            result.result_ = regressionResultBuilder_.build();
          }
        }
        result.resultCase_ = resultCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.serving.Inference.InferenceResult) {
          return mergeFrom((tensorflow.serving.Inference.InferenceResult)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.serving.Inference.InferenceResult other) {
        if (other == tensorflow.serving.Inference.InferenceResult.getDefaultInstance()) return this;
        if (other.hasModelSpec()) {
          mergeModelSpec(other.getModelSpec());
        }
        switch (other.getResultCase()) {
          case CLASSIFICATION_RESULT: {
            mergeClassificationResult(other.getClassificationResult());
            break;
          }
          case REGRESSION_RESULT: {
            mergeRegressionResult(other.getRegressionResult());
            break;
          }
          case RESULT_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tensorflow.serving.Inference.InferenceResult parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tensorflow.serving.Inference.InferenceResult) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int resultCase_ = 0;
      private java.lang.Object result_;
      public ResultCase
          getResultCase() {
        return ResultCase.forNumber(
            resultCase_);
      }

      public Builder clearResult() {
        resultCase_ = 0;
        result_ = null;
        onChanged();
        return this;
      }


      private tensorflow.serving.Model.ModelSpec modelSpec_;
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.serving.Model.ModelSpec, tensorflow.serving.Model.ModelSpec.Builder, tensorflow.serving.Model.ModelSpecOrBuilder> modelSpecBuilder_;
      /**
       * <code>.tensorflow.serving.ModelSpec model_spec = 1;</code>
       * @return Whether the modelSpec field is set.
       */
      public boolean hasModelSpec() {
        return modelSpecBuilder_ != null || modelSpec_ != null;
      }
      /**
       * <code>.tensorflow.serving.ModelSpec model_spec = 1;</code>
       * @return The modelSpec.
       */
      public tensorflow.serving.Model.ModelSpec getModelSpec() {
        if (modelSpecBuilder_ == null) {
          return modelSpec_ == null ? tensorflow.serving.Model.ModelSpec.getDefaultInstance() : modelSpec_;
        } else {
          return modelSpecBuilder_.getMessage();
        }
      }
      /**
       * <code>.tensorflow.serving.ModelSpec model_spec = 1;</code>
       */
      public Builder setModelSpec(tensorflow.serving.Model.ModelSpec value) {
        if (modelSpecBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          modelSpec_ = value;
          onChanged();
        } else {
          modelSpecBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.tensorflow.serving.ModelSpec model_spec = 1;</code>
       */
      public Builder setModelSpec(
          tensorflow.serving.Model.ModelSpec.Builder builderForValue) {
        if (modelSpecBuilder_ == null) {
          modelSpec_ = builderForValue.build();
          onChanged();
        } else {
          modelSpecBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.tensorflow.serving.ModelSpec model_spec = 1;</code>
       */
      public Builder mergeModelSpec(tensorflow.serving.Model.ModelSpec value) {
        if (modelSpecBuilder_ == null) {
          if (modelSpec_ != null) {
            modelSpec_ =
              tensorflow.serving.Model.ModelSpec.newBuilder(modelSpec_).mergeFrom(value).buildPartial();
          } else {
            modelSpec_ = value;
          }
          onChanged();
        } else {
          modelSpecBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.tensorflow.serving.ModelSpec model_spec = 1;</code>
       */
      public Builder clearModelSpec() {
        if (modelSpecBuilder_ == null) {
          modelSpec_ = null;
          onChanged();
        } else {
          modelSpec_ = null;
          modelSpecBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.tensorflow.serving.ModelSpec model_spec = 1;</code>
       */
      public tensorflow.serving.Model.ModelSpec.Builder getModelSpecBuilder() {
        
        onChanged();
        return getModelSpecFieldBuilder().getBuilder();
      }
      /**
       * <code>.tensorflow.serving.ModelSpec model_spec = 1;</code>
       */
      public tensorflow.serving.Model.ModelSpecOrBuilder getModelSpecOrBuilder() {
        if (modelSpecBuilder_ != null) {
          return modelSpecBuilder_.getMessageOrBuilder();
        } else {
          return modelSpec_ == null ?
              tensorflow.serving.Model.ModelSpec.getDefaultInstance() : modelSpec_;
        }
      }
      /**
       * <code>.tensorflow.serving.ModelSpec model_spec = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.serving.Model.ModelSpec, tensorflow.serving.Model.ModelSpec.Builder, tensorflow.serving.Model.ModelSpecOrBuilder> 
          getModelSpecFieldBuilder() {
        if (modelSpecBuilder_ == null) {
          modelSpecBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              tensorflow.serving.Model.ModelSpec, tensorflow.serving.Model.ModelSpec.Builder, tensorflow.serving.Model.ModelSpecOrBuilder>(
                  getModelSpec(),
                  getParentForChildren(),
                  isClean());
          modelSpec_ = null;
        }
        return modelSpecBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.serving.Classification.ClassificationResult, tensorflow.serving.Classification.ClassificationResult.Builder, tensorflow.serving.Classification.ClassificationResultOrBuilder> classificationResultBuilder_;
      /**
       * <code>.tensorflow.serving.ClassificationResult classification_result = 2;</code>
       * @return Whether the classificationResult field is set.
       */
      @java.lang.Override
      public boolean hasClassificationResult() {
        return resultCase_ == 2;
      }
      /**
       * <code>.tensorflow.serving.ClassificationResult classification_result = 2;</code>
       * @return The classificationResult.
       */
      @java.lang.Override
      public tensorflow.serving.Classification.ClassificationResult getClassificationResult() {
        if (classificationResultBuilder_ == null) {
          if (resultCase_ == 2) {
            return (tensorflow.serving.Classification.ClassificationResult) result_;
          }
          return tensorflow.serving.Classification.ClassificationResult.getDefaultInstance();
        } else {
          if (resultCase_ == 2) {
            return classificationResultBuilder_.getMessage();
          }
          return tensorflow.serving.Classification.ClassificationResult.getDefaultInstance();
        }
      }
      /**
       * <code>.tensorflow.serving.ClassificationResult classification_result = 2;</code>
       */
      public Builder setClassificationResult(tensorflow.serving.Classification.ClassificationResult value) {
        if (classificationResultBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          result_ = value;
          onChanged();
        } else {
          classificationResultBuilder_.setMessage(value);
        }
        resultCase_ = 2;
        return this;
      }
      /**
       * <code>.tensorflow.serving.ClassificationResult classification_result = 2;</code>
       */
      public Builder setClassificationResult(
          tensorflow.serving.Classification.ClassificationResult.Builder builderForValue) {
        if (classificationResultBuilder_ == null) {
          result_ = builderForValue.build();
          onChanged();
        } else {
          classificationResultBuilder_.setMessage(builderForValue.build());
        }
        resultCase_ = 2;
        return this;
      }
      /**
       * <code>.tensorflow.serving.ClassificationResult classification_result = 2;</code>
       */
      public Builder mergeClassificationResult(tensorflow.serving.Classification.ClassificationResult value) {
        if (classificationResultBuilder_ == null) {
          if (resultCase_ == 2 &&
              result_ != tensorflow.serving.Classification.ClassificationResult.getDefaultInstance()) {
            result_ = tensorflow.serving.Classification.ClassificationResult.newBuilder((tensorflow.serving.Classification.ClassificationResult) result_)
                .mergeFrom(value).buildPartial();
          } else {
            result_ = value;
          }
          onChanged();
        } else {
          if (resultCase_ == 2) {
            classificationResultBuilder_.mergeFrom(value);
          }
          classificationResultBuilder_.setMessage(value);
        }
        resultCase_ = 2;
        return this;
      }
      /**
       * <code>.tensorflow.serving.ClassificationResult classification_result = 2;</code>
       */
      public Builder clearClassificationResult() {
        if (classificationResultBuilder_ == null) {
          if (resultCase_ == 2) {
            resultCase_ = 0;
            result_ = null;
            onChanged();
          }
        } else {
          if (resultCase_ == 2) {
            resultCase_ = 0;
            result_ = null;
          }
          classificationResultBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.tensorflow.serving.ClassificationResult classification_result = 2;</code>
       */
      public tensorflow.serving.Classification.ClassificationResult.Builder getClassificationResultBuilder() {
        return getClassificationResultFieldBuilder().getBuilder();
      }
      /**
       * <code>.tensorflow.serving.ClassificationResult classification_result = 2;</code>
       */
      @java.lang.Override
      public tensorflow.serving.Classification.ClassificationResultOrBuilder getClassificationResultOrBuilder() {
        if ((resultCase_ == 2) && (classificationResultBuilder_ != null)) {
          return classificationResultBuilder_.getMessageOrBuilder();
        } else {
          if (resultCase_ == 2) {
            return (tensorflow.serving.Classification.ClassificationResult) result_;
          }
          return tensorflow.serving.Classification.ClassificationResult.getDefaultInstance();
        }
      }
      /**
       * <code>.tensorflow.serving.ClassificationResult classification_result = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.serving.Classification.ClassificationResult, tensorflow.serving.Classification.ClassificationResult.Builder, tensorflow.serving.Classification.ClassificationResultOrBuilder> 
          getClassificationResultFieldBuilder() {
        if (classificationResultBuilder_ == null) {
          if (!(resultCase_ == 2)) {
            result_ = tensorflow.serving.Classification.ClassificationResult.getDefaultInstance();
          }
          classificationResultBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              tensorflow.serving.Classification.ClassificationResult, tensorflow.serving.Classification.ClassificationResult.Builder, tensorflow.serving.Classification.ClassificationResultOrBuilder>(
                  (tensorflow.serving.Classification.ClassificationResult) result_,
                  getParentForChildren(),
                  isClean());
          result_ = null;
        }
        resultCase_ = 2;
        onChanged();;
        return classificationResultBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.serving.RegressionOuterClass.RegressionResult, tensorflow.serving.RegressionOuterClass.RegressionResult.Builder, tensorflow.serving.RegressionOuterClass.RegressionResultOrBuilder> regressionResultBuilder_;
      /**
       * <code>.tensorflow.serving.RegressionResult regression_result = 3;</code>
       * @return Whether the regressionResult field is set.
       */
      @java.lang.Override
      public boolean hasRegressionResult() {
        return resultCase_ == 3;
      }
      /**
       * <code>.tensorflow.serving.RegressionResult regression_result = 3;</code>
       * @return The regressionResult.
       */
      @java.lang.Override
      public tensorflow.serving.RegressionOuterClass.RegressionResult getRegressionResult() {
        if (regressionResultBuilder_ == null) {
          if (resultCase_ == 3) {
            return (tensorflow.serving.RegressionOuterClass.RegressionResult) result_;
          }
          return tensorflow.serving.RegressionOuterClass.RegressionResult.getDefaultInstance();
        } else {
          if (resultCase_ == 3) {
            return regressionResultBuilder_.getMessage();
          }
          return tensorflow.serving.RegressionOuterClass.RegressionResult.getDefaultInstance();
        }
      }
      /**
       * <code>.tensorflow.serving.RegressionResult regression_result = 3;</code>
       */
      public Builder setRegressionResult(tensorflow.serving.RegressionOuterClass.RegressionResult value) {
        if (regressionResultBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          result_ = value;
          onChanged();
        } else {
          regressionResultBuilder_.setMessage(value);
        }
        resultCase_ = 3;
        return this;
      }
      /**
       * <code>.tensorflow.serving.RegressionResult regression_result = 3;</code>
       */
      public Builder setRegressionResult(
          tensorflow.serving.RegressionOuterClass.RegressionResult.Builder builderForValue) {
        if (regressionResultBuilder_ == null) {
          result_ = builderForValue.build();
          onChanged();
        } else {
          regressionResultBuilder_.setMessage(builderForValue.build());
        }
        resultCase_ = 3;
        return this;
      }
      /**
       * <code>.tensorflow.serving.RegressionResult regression_result = 3;</code>
       */
      public Builder mergeRegressionResult(tensorflow.serving.RegressionOuterClass.RegressionResult value) {
        if (regressionResultBuilder_ == null) {
          if (resultCase_ == 3 &&
              result_ != tensorflow.serving.RegressionOuterClass.RegressionResult.getDefaultInstance()) {
            result_ = tensorflow.serving.RegressionOuterClass.RegressionResult.newBuilder((tensorflow.serving.RegressionOuterClass.RegressionResult) result_)
                .mergeFrom(value).buildPartial();
          } else {
            result_ = value;
          }
          onChanged();
        } else {
          if (resultCase_ == 3) {
            regressionResultBuilder_.mergeFrom(value);
          }
          regressionResultBuilder_.setMessage(value);
        }
        resultCase_ = 3;
        return this;
      }
      /**
       * <code>.tensorflow.serving.RegressionResult regression_result = 3;</code>
       */
      public Builder clearRegressionResult() {
        if (regressionResultBuilder_ == null) {
          if (resultCase_ == 3) {
            resultCase_ = 0;
            result_ = null;
            onChanged();
          }
        } else {
          if (resultCase_ == 3) {
            resultCase_ = 0;
            result_ = null;
          }
          regressionResultBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.tensorflow.serving.RegressionResult regression_result = 3;</code>
       */
      public tensorflow.serving.RegressionOuterClass.RegressionResult.Builder getRegressionResultBuilder() {
        return getRegressionResultFieldBuilder().getBuilder();
      }
      /**
       * <code>.tensorflow.serving.RegressionResult regression_result = 3;</code>
       */
      @java.lang.Override
      public tensorflow.serving.RegressionOuterClass.RegressionResultOrBuilder getRegressionResultOrBuilder() {
        if ((resultCase_ == 3) && (regressionResultBuilder_ != null)) {
          return regressionResultBuilder_.getMessageOrBuilder();
        } else {
          if (resultCase_ == 3) {
            return (tensorflow.serving.RegressionOuterClass.RegressionResult) result_;
          }
          return tensorflow.serving.RegressionOuterClass.RegressionResult.getDefaultInstance();
        }
      }
      /**
       * <code>.tensorflow.serving.RegressionResult regression_result = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.serving.RegressionOuterClass.RegressionResult, tensorflow.serving.RegressionOuterClass.RegressionResult.Builder, tensorflow.serving.RegressionOuterClass.RegressionResultOrBuilder> 
          getRegressionResultFieldBuilder() {
        if (regressionResultBuilder_ == null) {
          if (!(resultCase_ == 3)) {
            result_ = tensorflow.serving.RegressionOuterClass.RegressionResult.getDefaultInstance();
          }
          regressionResultBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              tensorflow.serving.RegressionOuterClass.RegressionResult, tensorflow.serving.RegressionOuterClass.RegressionResult.Builder, tensorflow.serving.RegressionOuterClass.RegressionResultOrBuilder>(
                  (tensorflow.serving.RegressionOuterClass.RegressionResult) result_,
                  getParentForChildren(),
                  isClean());
          result_ = null;
        }
        resultCase_ = 3;
        onChanged();;
        return regressionResultBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.serving.InferenceResult)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.serving.InferenceResult)
    private static final tensorflow.serving.Inference.InferenceResult DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.serving.Inference.InferenceResult();
    }

    public static tensorflow.serving.Inference.InferenceResult getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<InferenceResult>
        PARSER = new com.google.protobuf.AbstractParser<InferenceResult>() {
      @java.lang.Override
      public InferenceResult parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new InferenceResult(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<InferenceResult> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<InferenceResult> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public tensorflow.serving.Inference.InferenceResult getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MultiInferenceRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.serving.MultiInferenceRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Inference tasks.
     * </pre>
     *
     * <code>repeated .tensorflow.serving.InferenceTask tasks = 1;</code>
     */
    java.util.List<tensorflow.serving.Inference.InferenceTask> 
        getTasksList();
    /**
     * <pre>
     * Inference tasks.
     * </pre>
     *
     * <code>repeated .tensorflow.serving.InferenceTask tasks = 1;</code>
     */
    tensorflow.serving.Inference.InferenceTask getTasks(int index);
    /**
     * <pre>
     * Inference tasks.
     * </pre>
     *
     * <code>repeated .tensorflow.serving.InferenceTask tasks = 1;</code>
     */
    int getTasksCount();
    /**
     * <pre>
     * Inference tasks.
     * </pre>
     *
     * <code>repeated .tensorflow.serving.InferenceTask tasks = 1;</code>
     */
    java.util.List<? extends tensorflow.serving.Inference.InferenceTaskOrBuilder> 
        getTasksOrBuilderList();
    /**
     * <pre>
     * Inference tasks.
     * </pre>
     *
     * <code>repeated .tensorflow.serving.InferenceTask tasks = 1;</code>
     */
    tensorflow.serving.Inference.InferenceTaskOrBuilder getTasksOrBuilder(
        int index);

    /**
     * <pre>
     * Input data.
     * </pre>
     *
     * <code>.tensorflow.serving.Input input = 2;</code>
     * @return Whether the input field is set.
     */
    boolean hasInput();
    /**
     * <pre>
     * Input data.
     * </pre>
     *
     * <code>.tensorflow.serving.Input input = 2;</code>
     * @return The input.
     */
    tensorflow.serving.InputOuterClass.Input getInput();
    /**
     * <pre>
     * Input data.
     * </pre>
     *
     * <code>.tensorflow.serving.Input input = 2;</code>
     */
    tensorflow.serving.InputOuterClass.InputOrBuilder getInputOrBuilder();
  }
  /**
   * <pre>
   * Inference request containing one or more requests.
   * </pre>
   *
   * Protobuf type {@code tensorflow.serving.MultiInferenceRequest}
   */
  public static final class MultiInferenceRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.serving.MultiInferenceRequest)
      MultiInferenceRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MultiInferenceRequest.newBuilder() to construct.
    private MultiInferenceRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MultiInferenceRequest() {
      tasks_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MultiInferenceRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MultiInferenceRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                tasks_ = new java.util.ArrayList<tensorflow.serving.Inference.InferenceTask>();
                mutable_bitField0_ |= 0x00000001;
              }
              tasks_.add(
                  input.readMessage(tensorflow.serving.Inference.InferenceTask.parser(), extensionRegistry));
              break;
            }
            case 18: {
              tensorflow.serving.InputOuterClass.Input.Builder subBuilder = null;
              if (input_ != null) {
                subBuilder = input_.toBuilder();
              }
              input_ = input.readMessage(tensorflow.serving.InputOuterClass.Input.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(input_);
                input_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          tasks_ = java.util.Collections.unmodifiableList(tasks_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.serving.Inference.internal_static_tensorflow_serving_MultiInferenceRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.serving.Inference.internal_static_tensorflow_serving_MultiInferenceRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.serving.Inference.MultiInferenceRequest.class, tensorflow.serving.Inference.MultiInferenceRequest.Builder.class);
    }

    public static final int TASKS_FIELD_NUMBER = 1;
    private java.util.List<tensorflow.serving.Inference.InferenceTask> tasks_;
    /**
     * <pre>
     * Inference tasks.
     * </pre>
     *
     * <code>repeated .tensorflow.serving.InferenceTask tasks = 1;</code>
     */
    @java.lang.Override
    public java.util.List<tensorflow.serving.Inference.InferenceTask> getTasksList() {
      return tasks_;
    }
    /**
     * <pre>
     * Inference tasks.
     * </pre>
     *
     * <code>repeated .tensorflow.serving.InferenceTask tasks = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends tensorflow.serving.Inference.InferenceTaskOrBuilder> 
        getTasksOrBuilderList() {
      return tasks_;
    }
    /**
     * <pre>
     * Inference tasks.
     * </pre>
     *
     * <code>repeated .tensorflow.serving.InferenceTask tasks = 1;</code>
     */
    @java.lang.Override
    public int getTasksCount() {
      return tasks_.size();
    }
    /**
     * <pre>
     * Inference tasks.
     * </pre>
     *
     * <code>repeated .tensorflow.serving.InferenceTask tasks = 1;</code>
     */
    @java.lang.Override
    public tensorflow.serving.Inference.InferenceTask getTasks(int index) {
      return tasks_.get(index);
    }
    /**
     * <pre>
     * Inference tasks.
     * </pre>
     *
     * <code>repeated .tensorflow.serving.InferenceTask tasks = 1;</code>
     */
    @java.lang.Override
    public tensorflow.serving.Inference.InferenceTaskOrBuilder getTasksOrBuilder(
        int index) {
      return tasks_.get(index);
    }

    public static final int INPUT_FIELD_NUMBER = 2;
    private tensorflow.serving.InputOuterClass.Input input_;
    /**
     * <pre>
     * Input data.
     * </pre>
     *
     * <code>.tensorflow.serving.Input input = 2;</code>
     * @return Whether the input field is set.
     */
    @java.lang.Override
    public boolean hasInput() {
      return input_ != null;
    }
    /**
     * <pre>
     * Input data.
     * </pre>
     *
     * <code>.tensorflow.serving.Input input = 2;</code>
     * @return The input.
     */
    @java.lang.Override
    public tensorflow.serving.InputOuterClass.Input getInput() {
      return input_ == null ? tensorflow.serving.InputOuterClass.Input.getDefaultInstance() : input_;
    }
    /**
     * <pre>
     * Input data.
     * </pre>
     *
     * <code>.tensorflow.serving.Input input = 2;</code>
     */
    @java.lang.Override
    public tensorflow.serving.InputOuterClass.InputOrBuilder getInputOrBuilder() {
      return getInput();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < tasks_.size(); i++) {
        output.writeMessage(1, tasks_.get(i));
      }
      if (input_ != null) {
        output.writeMessage(2, getInput());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < tasks_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, tasks_.get(i));
      }
      if (input_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getInput());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.serving.Inference.MultiInferenceRequest)) {
        return super.equals(obj);
      }
      tensorflow.serving.Inference.MultiInferenceRequest other = (tensorflow.serving.Inference.MultiInferenceRequest) obj;

      if (!getTasksList()
          .equals(other.getTasksList())) return false;
      if (hasInput() != other.hasInput()) return false;
      if (hasInput()) {
        if (!getInput()
            .equals(other.getInput())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getTasksCount() > 0) {
        hash = (37 * hash) + TASKS_FIELD_NUMBER;
        hash = (53 * hash) + getTasksList().hashCode();
      }
      if (hasInput()) {
        hash = (37 * hash) + INPUT_FIELD_NUMBER;
        hash = (53 * hash) + getInput().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.serving.Inference.MultiInferenceRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.serving.Inference.MultiInferenceRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.serving.Inference.MultiInferenceRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.serving.Inference.MultiInferenceRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.serving.Inference.MultiInferenceRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.serving.Inference.MultiInferenceRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.serving.Inference.MultiInferenceRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.serving.Inference.MultiInferenceRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.serving.Inference.MultiInferenceRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tensorflow.serving.Inference.MultiInferenceRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.serving.Inference.MultiInferenceRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.serving.Inference.MultiInferenceRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.serving.Inference.MultiInferenceRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Inference request containing one or more requests.
     * </pre>
     *
     * Protobuf type {@code tensorflow.serving.MultiInferenceRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.serving.MultiInferenceRequest)
        tensorflow.serving.Inference.MultiInferenceRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.serving.Inference.internal_static_tensorflow_serving_MultiInferenceRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.serving.Inference.internal_static_tensorflow_serving_MultiInferenceRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.serving.Inference.MultiInferenceRequest.class, tensorflow.serving.Inference.MultiInferenceRequest.Builder.class);
      }

      // Construct using tensorflow.serving.Inference.MultiInferenceRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTasksFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (tasksBuilder_ == null) {
          tasks_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          tasksBuilder_.clear();
        }
        if (inputBuilder_ == null) {
          input_ = null;
        } else {
          input_ = null;
          inputBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.serving.Inference.internal_static_tensorflow_serving_MultiInferenceRequest_descriptor;
      }

      @java.lang.Override
      public tensorflow.serving.Inference.MultiInferenceRequest getDefaultInstanceForType() {
        return tensorflow.serving.Inference.MultiInferenceRequest.getDefaultInstance();
      }

      @java.lang.Override
      public tensorflow.serving.Inference.MultiInferenceRequest build() {
        tensorflow.serving.Inference.MultiInferenceRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public tensorflow.serving.Inference.MultiInferenceRequest buildPartial() {
        tensorflow.serving.Inference.MultiInferenceRequest result = new tensorflow.serving.Inference.MultiInferenceRequest(this);
        int from_bitField0_ = bitField0_;
        if (tasksBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            tasks_ = java.util.Collections.unmodifiableList(tasks_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.tasks_ = tasks_;
        } else {
          result.tasks_ = tasksBuilder_.build();
        }
        if (inputBuilder_ == null) {
          result.input_ = input_;
        } else {
          result.input_ = inputBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.serving.Inference.MultiInferenceRequest) {
          return mergeFrom((tensorflow.serving.Inference.MultiInferenceRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.serving.Inference.MultiInferenceRequest other) {
        if (other == tensorflow.serving.Inference.MultiInferenceRequest.getDefaultInstance()) return this;
        if (tasksBuilder_ == null) {
          if (!other.tasks_.isEmpty()) {
            if (tasks_.isEmpty()) {
              tasks_ = other.tasks_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureTasksIsMutable();
              tasks_.addAll(other.tasks_);
            }
            onChanged();
          }
        } else {
          if (!other.tasks_.isEmpty()) {
            if (tasksBuilder_.isEmpty()) {
              tasksBuilder_.dispose();
              tasksBuilder_ = null;
              tasks_ = other.tasks_;
              bitField0_ = (bitField0_ & ~0x00000001);
              tasksBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTasksFieldBuilder() : null;
            } else {
              tasksBuilder_.addAllMessages(other.tasks_);
            }
          }
        }
        if (other.hasInput()) {
          mergeInput(other.getInput());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tensorflow.serving.Inference.MultiInferenceRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tensorflow.serving.Inference.MultiInferenceRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<tensorflow.serving.Inference.InferenceTask> tasks_ =
        java.util.Collections.emptyList();
      private void ensureTasksIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          tasks_ = new java.util.ArrayList<tensorflow.serving.Inference.InferenceTask>(tasks_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          tensorflow.serving.Inference.InferenceTask, tensorflow.serving.Inference.InferenceTask.Builder, tensorflow.serving.Inference.InferenceTaskOrBuilder> tasksBuilder_;

      /**
       * <pre>
       * Inference tasks.
       * </pre>
       *
       * <code>repeated .tensorflow.serving.InferenceTask tasks = 1;</code>
       */
      public java.util.List<tensorflow.serving.Inference.InferenceTask> getTasksList() {
        if (tasksBuilder_ == null) {
          return java.util.Collections.unmodifiableList(tasks_);
        } else {
          return tasksBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Inference tasks.
       * </pre>
       *
       * <code>repeated .tensorflow.serving.InferenceTask tasks = 1;</code>
       */
      public int getTasksCount() {
        if (tasksBuilder_ == null) {
          return tasks_.size();
        } else {
          return tasksBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Inference tasks.
       * </pre>
       *
       * <code>repeated .tensorflow.serving.InferenceTask tasks = 1;</code>
       */
      public tensorflow.serving.Inference.InferenceTask getTasks(int index) {
        if (tasksBuilder_ == null) {
          return tasks_.get(index);
        } else {
          return tasksBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Inference tasks.
       * </pre>
       *
       * <code>repeated .tensorflow.serving.InferenceTask tasks = 1;</code>
       */
      public Builder setTasks(
          int index, tensorflow.serving.Inference.InferenceTask value) {
        if (tasksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTasksIsMutable();
          tasks_.set(index, value);
          onChanged();
        } else {
          tasksBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Inference tasks.
       * </pre>
       *
       * <code>repeated .tensorflow.serving.InferenceTask tasks = 1;</code>
       */
      public Builder setTasks(
          int index, tensorflow.serving.Inference.InferenceTask.Builder builderForValue) {
        if (tasksBuilder_ == null) {
          ensureTasksIsMutable();
          tasks_.set(index, builderForValue.build());
          onChanged();
        } else {
          tasksBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Inference tasks.
       * </pre>
       *
       * <code>repeated .tensorflow.serving.InferenceTask tasks = 1;</code>
       */
      public Builder addTasks(tensorflow.serving.Inference.InferenceTask value) {
        if (tasksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTasksIsMutable();
          tasks_.add(value);
          onChanged();
        } else {
          tasksBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Inference tasks.
       * </pre>
       *
       * <code>repeated .tensorflow.serving.InferenceTask tasks = 1;</code>
       */
      public Builder addTasks(
          int index, tensorflow.serving.Inference.InferenceTask value) {
        if (tasksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTasksIsMutable();
          tasks_.add(index, value);
          onChanged();
        } else {
          tasksBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Inference tasks.
       * </pre>
       *
       * <code>repeated .tensorflow.serving.InferenceTask tasks = 1;</code>
       */
      public Builder addTasks(
          tensorflow.serving.Inference.InferenceTask.Builder builderForValue) {
        if (tasksBuilder_ == null) {
          ensureTasksIsMutable();
          tasks_.add(builderForValue.build());
          onChanged();
        } else {
          tasksBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Inference tasks.
       * </pre>
       *
       * <code>repeated .tensorflow.serving.InferenceTask tasks = 1;</code>
       */
      public Builder addTasks(
          int index, tensorflow.serving.Inference.InferenceTask.Builder builderForValue) {
        if (tasksBuilder_ == null) {
          ensureTasksIsMutable();
          tasks_.add(index, builderForValue.build());
          onChanged();
        } else {
          tasksBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Inference tasks.
       * </pre>
       *
       * <code>repeated .tensorflow.serving.InferenceTask tasks = 1;</code>
       */
      public Builder addAllTasks(
          java.lang.Iterable<? extends tensorflow.serving.Inference.InferenceTask> values) {
        if (tasksBuilder_ == null) {
          ensureTasksIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, tasks_);
          onChanged();
        } else {
          tasksBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Inference tasks.
       * </pre>
       *
       * <code>repeated .tensorflow.serving.InferenceTask tasks = 1;</code>
       */
      public Builder clearTasks() {
        if (tasksBuilder_ == null) {
          tasks_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          tasksBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Inference tasks.
       * </pre>
       *
       * <code>repeated .tensorflow.serving.InferenceTask tasks = 1;</code>
       */
      public Builder removeTasks(int index) {
        if (tasksBuilder_ == null) {
          ensureTasksIsMutable();
          tasks_.remove(index);
          onChanged();
        } else {
          tasksBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Inference tasks.
       * </pre>
       *
       * <code>repeated .tensorflow.serving.InferenceTask tasks = 1;</code>
       */
      public tensorflow.serving.Inference.InferenceTask.Builder getTasksBuilder(
          int index) {
        return getTasksFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Inference tasks.
       * </pre>
       *
       * <code>repeated .tensorflow.serving.InferenceTask tasks = 1;</code>
       */
      public tensorflow.serving.Inference.InferenceTaskOrBuilder getTasksOrBuilder(
          int index) {
        if (tasksBuilder_ == null) {
          return tasks_.get(index);  } else {
          return tasksBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Inference tasks.
       * </pre>
       *
       * <code>repeated .tensorflow.serving.InferenceTask tasks = 1;</code>
       */
      public java.util.List<? extends tensorflow.serving.Inference.InferenceTaskOrBuilder> 
           getTasksOrBuilderList() {
        if (tasksBuilder_ != null) {
          return tasksBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(tasks_);
        }
      }
      /**
       * <pre>
       * Inference tasks.
       * </pre>
       *
       * <code>repeated .tensorflow.serving.InferenceTask tasks = 1;</code>
       */
      public tensorflow.serving.Inference.InferenceTask.Builder addTasksBuilder() {
        return getTasksFieldBuilder().addBuilder(
            tensorflow.serving.Inference.InferenceTask.getDefaultInstance());
      }
      /**
       * <pre>
       * Inference tasks.
       * </pre>
       *
       * <code>repeated .tensorflow.serving.InferenceTask tasks = 1;</code>
       */
      public tensorflow.serving.Inference.InferenceTask.Builder addTasksBuilder(
          int index) {
        return getTasksFieldBuilder().addBuilder(
            index, tensorflow.serving.Inference.InferenceTask.getDefaultInstance());
      }
      /**
       * <pre>
       * Inference tasks.
       * </pre>
       *
       * <code>repeated .tensorflow.serving.InferenceTask tasks = 1;</code>
       */
      public java.util.List<tensorflow.serving.Inference.InferenceTask.Builder> 
           getTasksBuilderList() {
        return getTasksFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          tensorflow.serving.Inference.InferenceTask, tensorflow.serving.Inference.InferenceTask.Builder, tensorflow.serving.Inference.InferenceTaskOrBuilder> 
          getTasksFieldBuilder() {
        if (tasksBuilder_ == null) {
          tasksBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              tensorflow.serving.Inference.InferenceTask, tensorflow.serving.Inference.InferenceTask.Builder, tensorflow.serving.Inference.InferenceTaskOrBuilder>(
                  tasks_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          tasks_ = null;
        }
        return tasksBuilder_;
      }

      private tensorflow.serving.InputOuterClass.Input input_;
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.serving.InputOuterClass.Input, tensorflow.serving.InputOuterClass.Input.Builder, tensorflow.serving.InputOuterClass.InputOrBuilder> inputBuilder_;
      /**
       * <pre>
       * Input data.
       * </pre>
       *
       * <code>.tensorflow.serving.Input input = 2;</code>
       * @return Whether the input field is set.
       */
      public boolean hasInput() {
        return inputBuilder_ != null || input_ != null;
      }
      /**
       * <pre>
       * Input data.
       * </pre>
       *
       * <code>.tensorflow.serving.Input input = 2;</code>
       * @return The input.
       */
      public tensorflow.serving.InputOuterClass.Input getInput() {
        if (inputBuilder_ == null) {
          return input_ == null ? tensorflow.serving.InputOuterClass.Input.getDefaultInstance() : input_;
        } else {
          return inputBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Input data.
       * </pre>
       *
       * <code>.tensorflow.serving.Input input = 2;</code>
       */
      public Builder setInput(tensorflow.serving.InputOuterClass.Input value) {
        if (inputBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          input_ = value;
          onChanged();
        } else {
          inputBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Input data.
       * </pre>
       *
       * <code>.tensorflow.serving.Input input = 2;</code>
       */
      public Builder setInput(
          tensorflow.serving.InputOuterClass.Input.Builder builderForValue) {
        if (inputBuilder_ == null) {
          input_ = builderForValue.build();
          onChanged();
        } else {
          inputBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Input data.
       * </pre>
       *
       * <code>.tensorflow.serving.Input input = 2;</code>
       */
      public Builder mergeInput(tensorflow.serving.InputOuterClass.Input value) {
        if (inputBuilder_ == null) {
          if (input_ != null) {
            input_ =
              tensorflow.serving.InputOuterClass.Input.newBuilder(input_).mergeFrom(value).buildPartial();
          } else {
            input_ = value;
          }
          onChanged();
        } else {
          inputBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Input data.
       * </pre>
       *
       * <code>.tensorflow.serving.Input input = 2;</code>
       */
      public Builder clearInput() {
        if (inputBuilder_ == null) {
          input_ = null;
          onChanged();
        } else {
          input_ = null;
          inputBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Input data.
       * </pre>
       *
       * <code>.tensorflow.serving.Input input = 2;</code>
       */
      public tensorflow.serving.InputOuterClass.Input.Builder getInputBuilder() {
        
        onChanged();
        return getInputFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Input data.
       * </pre>
       *
       * <code>.tensorflow.serving.Input input = 2;</code>
       */
      public tensorflow.serving.InputOuterClass.InputOrBuilder getInputOrBuilder() {
        if (inputBuilder_ != null) {
          return inputBuilder_.getMessageOrBuilder();
        } else {
          return input_ == null ?
              tensorflow.serving.InputOuterClass.Input.getDefaultInstance() : input_;
        }
      }
      /**
       * <pre>
       * Input data.
       * </pre>
       *
       * <code>.tensorflow.serving.Input input = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.serving.InputOuterClass.Input, tensorflow.serving.InputOuterClass.Input.Builder, tensorflow.serving.InputOuterClass.InputOrBuilder> 
          getInputFieldBuilder() {
        if (inputBuilder_ == null) {
          inputBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              tensorflow.serving.InputOuterClass.Input, tensorflow.serving.InputOuterClass.Input.Builder, tensorflow.serving.InputOuterClass.InputOrBuilder>(
                  getInput(),
                  getParentForChildren(),
                  isClean());
          input_ = null;
        }
        return inputBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.serving.MultiInferenceRequest)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.serving.MultiInferenceRequest)
    private static final tensorflow.serving.Inference.MultiInferenceRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.serving.Inference.MultiInferenceRequest();
    }

    public static tensorflow.serving.Inference.MultiInferenceRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MultiInferenceRequest>
        PARSER = new com.google.protobuf.AbstractParser<MultiInferenceRequest>() {
      @java.lang.Override
      public MultiInferenceRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MultiInferenceRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MultiInferenceRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MultiInferenceRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public tensorflow.serving.Inference.MultiInferenceRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MultiInferenceResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.serving.MultiInferenceResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * List of results; one for each InferenceTask in the request, returned in the
     * same order as the request.
     * </pre>
     *
     * <code>repeated .tensorflow.serving.InferenceResult results = 1;</code>
     */
    java.util.List<tensorflow.serving.Inference.InferenceResult> 
        getResultsList();
    /**
     * <pre>
     * List of results; one for each InferenceTask in the request, returned in the
     * same order as the request.
     * </pre>
     *
     * <code>repeated .tensorflow.serving.InferenceResult results = 1;</code>
     */
    tensorflow.serving.Inference.InferenceResult getResults(int index);
    /**
     * <pre>
     * List of results; one for each InferenceTask in the request, returned in the
     * same order as the request.
     * </pre>
     *
     * <code>repeated .tensorflow.serving.InferenceResult results = 1;</code>
     */
    int getResultsCount();
    /**
     * <pre>
     * List of results; one for each InferenceTask in the request, returned in the
     * same order as the request.
     * </pre>
     *
     * <code>repeated .tensorflow.serving.InferenceResult results = 1;</code>
     */
    java.util.List<? extends tensorflow.serving.Inference.InferenceResultOrBuilder> 
        getResultsOrBuilderList();
    /**
     * <pre>
     * List of results; one for each InferenceTask in the request, returned in the
     * same order as the request.
     * </pre>
     *
     * <code>repeated .tensorflow.serving.InferenceResult results = 1;</code>
     */
    tensorflow.serving.Inference.InferenceResultOrBuilder getResultsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Inference request containing one or more responses.
   * </pre>
   *
   * Protobuf type {@code tensorflow.serving.MultiInferenceResponse}
   */
  public static final class MultiInferenceResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.serving.MultiInferenceResponse)
      MultiInferenceResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MultiInferenceResponse.newBuilder() to construct.
    private MultiInferenceResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MultiInferenceResponse() {
      results_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MultiInferenceResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MultiInferenceResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                results_ = new java.util.ArrayList<tensorflow.serving.Inference.InferenceResult>();
                mutable_bitField0_ |= 0x00000001;
              }
              results_.add(
                  input.readMessage(tensorflow.serving.Inference.InferenceResult.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          results_ = java.util.Collections.unmodifiableList(results_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.serving.Inference.internal_static_tensorflow_serving_MultiInferenceResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.serving.Inference.internal_static_tensorflow_serving_MultiInferenceResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.serving.Inference.MultiInferenceResponse.class, tensorflow.serving.Inference.MultiInferenceResponse.Builder.class);
    }

    public static final int RESULTS_FIELD_NUMBER = 1;
    private java.util.List<tensorflow.serving.Inference.InferenceResult> results_;
    /**
     * <pre>
     * List of results; one for each InferenceTask in the request, returned in the
     * same order as the request.
     * </pre>
     *
     * <code>repeated .tensorflow.serving.InferenceResult results = 1;</code>
     */
    @java.lang.Override
    public java.util.List<tensorflow.serving.Inference.InferenceResult> getResultsList() {
      return results_;
    }
    /**
     * <pre>
     * List of results; one for each InferenceTask in the request, returned in the
     * same order as the request.
     * </pre>
     *
     * <code>repeated .tensorflow.serving.InferenceResult results = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends tensorflow.serving.Inference.InferenceResultOrBuilder> 
        getResultsOrBuilderList() {
      return results_;
    }
    /**
     * <pre>
     * List of results; one for each InferenceTask in the request, returned in the
     * same order as the request.
     * </pre>
     *
     * <code>repeated .tensorflow.serving.InferenceResult results = 1;</code>
     */
    @java.lang.Override
    public int getResultsCount() {
      return results_.size();
    }
    /**
     * <pre>
     * List of results; one for each InferenceTask in the request, returned in the
     * same order as the request.
     * </pre>
     *
     * <code>repeated .tensorflow.serving.InferenceResult results = 1;</code>
     */
    @java.lang.Override
    public tensorflow.serving.Inference.InferenceResult getResults(int index) {
      return results_.get(index);
    }
    /**
     * <pre>
     * List of results; one for each InferenceTask in the request, returned in the
     * same order as the request.
     * </pre>
     *
     * <code>repeated .tensorflow.serving.InferenceResult results = 1;</code>
     */
    @java.lang.Override
    public tensorflow.serving.Inference.InferenceResultOrBuilder getResultsOrBuilder(
        int index) {
      return results_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < results_.size(); i++) {
        output.writeMessage(1, results_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < results_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, results_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.serving.Inference.MultiInferenceResponse)) {
        return super.equals(obj);
      }
      tensorflow.serving.Inference.MultiInferenceResponse other = (tensorflow.serving.Inference.MultiInferenceResponse) obj;

      if (!getResultsList()
          .equals(other.getResultsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getResultsCount() > 0) {
        hash = (37 * hash) + RESULTS_FIELD_NUMBER;
        hash = (53 * hash) + getResultsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.serving.Inference.MultiInferenceResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.serving.Inference.MultiInferenceResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.serving.Inference.MultiInferenceResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.serving.Inference.MultiInferenceResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.serving.Inference.MultiInferenceResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.serving.Inference.MultiInferenceResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.serving.Inference.MultiInferenceResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.serving.Inference.MultiInferenceResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.serving.Inference.MultiInferenceResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tensorflow.serving.Inference.MultiInferenceResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.serving.Inference.MultiInferenceResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.serving.Inference.MultiInferenceResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.serving.Inference.MultiInferenceResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Inference request containing one or more responses.
     * </pre>
     *
     * Protobuf type {@code tensorflow.serving.MultiInferenceResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.serving.MultiInferenceResponse)
        tensorflow.serving.Inference.MultiInferenceResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.serving.Inference.internal_static_tensorflow_serving_MultiInferenceResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.serving.Inference.internal_static_tensorflow_serving_MultiInferenceResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.serving.Inference.MultiInferenceResponse.class, tensorflow.serving.Inference.MultiInferenceResponse.Builder.class);
      }

      // Construct using tensorflow.serving.Inference.MultiInferenceResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getResultsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (resultsBuilder_ == null) {
          results_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          resultsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.serving.Inference.internal_static_tensorflow_serving_MultiInferenceResponse_descriptor;
      }

      @java.lang.Override
      public tensorflow.serving.Inference.MultiInferenceResponse getDefaultInstanceForType() {
        return tensorflow.serving.Inference.MultiInferenceResponse.getDefaultInstance();
      }

      @java.lang.Override
      public tensorflow.serving.Inference.MultiInferenceResponse build() {
        tensorflow.serving.Inference.MultiInferenceResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public tensorflow.serving.Inference.MultiInferenceResponse buildPartial() {
        tensorflow.serving.Inference.MultiInferenceResponse result = new tensorflow.serving.Inference.MultiInferenceResponse(this);
        int from_bitField0_ = bitField0_;
        if (resultsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            results_ = java.util.Collections.unmodifiableList(results_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.results_ = results_;
        } else {
          result.results_ = resultsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.serving.Inference.MultiInferenceResponse) {
          return mergeFrom((tensorflow.serving.Inference.MultiInferenceResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.serving.Inference.MultiInferenceResponse other) {
        if (other == tensorflow.serving.Inference.MultiInferenceResponse.getDefaultInstance()) return this;
        if (resultsBuilder_ == null) {
          if (!other.results_.isEmpty()) {
            if (results_.isEmpty()) {
              results_ = other.results_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureResultsIsMutable();
              results_.addAll(other.results_);
            }
            onChanged();
          }
        } else {
          if (!other.results_.isEmpty()) {
            if (resultsBuilder_.isEmpty()) {
              resultsBuilder_.dispose();
              resultsBuilder_ = null;
              results_ = other.results_;
              bitField0_ = (bitField0_ & ~0x00000001);
              resultsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getResultsFieldBuilder() : null;
            } else {
              resultsBuilder_.addAllMessages(other.results_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tensorflow.serving.Inference.MultiInferenceResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tensorflow.serving.Inference.MultiInferenceResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<tensorflow.serving.Inference.InferenceResult> results_ =
        java.util.Collections.emptyList();
      private void ensureResultsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          results_ = new java.util.ArrayList<tensorflow.serving.Inference.InferenceResult>(results_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          tensorflow.serving.Inference.InferenceResult, tensorflow.serving.Inference.InferenceResult.Builder, tensorflow.serving.Inference.InferenceResultOrBuilder> resultsBuilder_;

      /**
       * <pre>
       * List of results; one for each InferenceTask in the request, returned in the
       * same order as the request.
       * </pre>
       *
       * <code>repeated .tensorflow.serving.InferenceResult results = 1;</code>
       */
      public java.util.List<tensorflow.serving.Inference.InferenceResult> getResultsList() {
        if (resultsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(results_);
        } else {
          return resultsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * List of results; one for each InferenceTask in the request, returned in the
       * same order as the request.
       * </pre>
       *
       * <code>repeated .tensorflow.serving.InferenceResult results = 1;</code>
       */
      public int getResultsCount() {
        if (resultsBuilder_ == null) {
          return results_.size();
        } else {
          return resultsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * List of results; one for each InferenceTask in the request, returned in the
       * same order as the request.
       * </pre>
       *
       * <code>repeated .tensorflow.serving.InferenceResult results = 1;</code>
       */
      public tensorflow.serving.Inference.InferenceResult getResults(int index) {
        if (resultsBuilder_ == null) {
          return results_.get(index);
        } else {
          return resultsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * List of results; one for each InferenceTask in the request, returned in the
       * same order as the request.
       * </pre>
       *
       * <code>repeated .tensorflow.serving.InferenceResult results = 1;</code>
       */
      public Builder setResults(
          int index, tensorflow.serving.Inference.InferenceResult value) {
        if (resultsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureResultsIsMutable();
          results_.set(index, value);
          onChanged();
        } else {
          resultsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of results; one for each InferenceTask in the request, returned in the
       * same order as the request.
       * </pre>
       *
       * <code>repeated .tensorflow.serving.InferenceResult results = 1;</code>
       */
      public Builder setResults(
          int index, tensorflow.serving.Inference.InferenceResult.Builder builderForValue) {
        if (resultsBuilder_ == null) {
          ensureResultsIsMutable();
          results_.set(index, builderForValue.build());
          onChanged();
        } else {
          resultsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of results; one for each InferenceTask in the request, returned in the
       * same order as the request.
       * </pre>
       *
       * <code>repeated .tensorflow.serving.InferenceResult results = 1;</code>
       */
      public Builder addResults(tensorflow.serving.Inference.InferenceResult value) {
        if (resultsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureResultsIsMutable();
          results_.add(value);
          onChanged();
        } else {
          resultsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * List of results; one for each InferenceTask in the request, returned in the
       * same order as the request.
       * </pre>
       *
       * <code>repeated .tensorflow.serving.InferenceResult results = 1;</code>
       */
      public Builder addResults(
          int index, tensorflow.serving.Inference.InferenceResult value) {
        if (resultsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureResultsIsMutable();
          results_.add(index, value);
          onChanged();
        } else {
          resultsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of results; one for each InferenceTask in the request, returned in the
       * same order as the request.
       * </pre>
       *
       * <code>repeated .tensorflow.serving.InferenceResult results = 1;</code>
       */
      public Builder addResults(
          tensorflow.serving.Inference.InferenceResult.Builder builderForValue) {
        if (resultsBuilder_ == null) {
          ensureResultsIsMutable();
          results_.add(builderForValue.build());
          onChanged();
        } else {
          resultsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of results; one for each InferenceTask in the request, returned in the
       * same order as the request.
       * </pre>
       *
       * <code>repeated .tensorflow.serving.InferenceResult results = 1;</code>
       */
      public Builder addResults(
          int index, tensorflow.serving.Inference.InferenceResult.Builder builderForValue) {
        if (resultsBuilder_ == null) {
          ensureResultsIsMutable();
          results_.add(index, builderForValue.build());
          onChanged();
        } else {
          resultsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of results; one for each InferenceTask in the request, returned in the
       * same order as the request.
       * </pre>
       *
       * <code>repeated .tensorflow.serving.InferenceResult results = 1;</code>
       */
      public Builder addAllResults(
          java.lang.Iterable<? extends tensorflow.serving.Inference.InferenceResult> values) {
        if (resultsBuilder_ == null) {
          ensureResultsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, results_);
          onChanged();
        } else {
          resultsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * List of results; one for each InferenceTask in the request, returned in the
       * same order as the request.
       * </pre>
       *
       * <code>repeated .tensorflow.serving.InferenceResult results = 1;</code>
       */
      public Builder clearResults() {
        if (resultsBuilder_ == null) {
          results_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          resultsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * List of results; one for each InferenceTask in the request, returned in the
       * same order as the request.
       * </pre>
       *
       * <code>repeated .tensorflow.serving.InferenceResult results = 1;</code>
       */
      public Builder removeResults(int index) {
        if (resultsBuilder_ == null) {
          ensureResultsIsMutable();
          results_.remove(index);
          onChanged();
        } else {
          resultsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * List of results; one for each InferenceTask in the request, returned in the
       * same order as the request.
       * </pre>
       *
       * <code>repeated .tensorflow.serving.InferenceResult results = 1;</code>
       */
      public tensorflow.serving.Inference.InferenceResult.Builder getResultsBuilder(
          int index) {
        return getResultsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * List of results; one for each InferenceTask in the request, returned in the
       * same order as the request.
       * </pre>
       *
       * <code>repeated .tensorflow.serving.InferenceResult results = 1;</code>
       */
      public tensorflow.serving.Inference.InferenceResultOrBuilder getResultsOrBuilder(
          int index) {
        if (resultsBuilder_ == null) {
          return results_.get(index);  } else {
          return resultsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * List of results; one for each InferenceTask in the request, returned in the
       * same order as the request.
       * </pre>
       *
       * <code>repeated .tensorflow.serving.InferenceResult results = 1;</code>
       */
      public java.util.List<? extends tensorflow.serving.Inference.InferenceResultOrBuilder> 
           getResultsOrBuilderList() {
        if (resultsBuilder_ != null) {
          return resultsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(results_);
        }
      }
      /**
       * <pre>
       * List of results; one for each InferenceTask in the request, returned in the
       * same order as the request.
       * </pre>
       *
       * <code>repeated .tensorflow.serving.InferenceResult results = 1;</code>
       */
      public tensorflow.serving.Inference.InferenceResult.Builder addResultsBuilder() {
        return getResultsFieldBuilder().addBuilder(
            tensorflow.serving.Inference.InferenceResult.getDefaultInstance());
      }
      /**
       * <pre>
       * List of results; one for each InferenceTask in the request, returned in the
       * same order as the request.
       * </pre>
       *
       * <code>repeated .tensorflow.serving.InferenceResult results = 1;</code>
       */
      public tensorflow.serving.Inference.InferenceResult.Builder addResultsBuilder(
          int index) {
        return getResultsFieldBuilder().addBuilder(
            index, tensorflow.serving.Inference.InferenceResult.getDefaultInstance());
      }
      /**
       * <pre>
       * List of results; one for each InferenceTask in the request, returned in the
       * same order as the request.
       * </pre>
       *
       * <code>repeated .tensorflow.serving.InferenceResult results = 1;</code>
       */
      public java.util.List<tensorflow.serving.Inference.InferenceResult.Builder> 
           getResultsBuilderList() {
        return getResultsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          tensorflow.serving.Inference.InferenceResult, tensorflow.serving.Inference.InferenceResult.Builder, tensorflow.serving.Inference.InferenceResultOrBuilder> 
          getResultsFieldBuilder() {
        if (resultsBuilder_ == null) {
          resultsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              tensorflow.serving.Inference.InferenceResult, tensorflow.serving.Inference.InferenceResult.Builder, tensorflow.serving.Inference.InferenceResultOrBuilder>(
                  results_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          results_ = null;
        }
        return resultsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.serving.MultiInferenceResponse)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.serving.MultiInferenceResponse)
    private static final tensorflow.serving.Inference.MultiInferenceResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.serving.Inference.MultiInferenceResponse();
    }

    public static tensorflow.serving.Inference.MultiInferenceResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MultiInferenceResponse>
        PARSER = new com.google.protobuf.AbstractParser<MultiInferenceResponse>() {
      @java.lang.Override
      public MultiInferenceResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MultiInferenceResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MultiInferenceResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MultiInferenceResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public tensorflow.serving.Inference.MultiInferenceResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_serving_InferenceTask_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_serving_InferenceTask_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_serving_InferenceResult_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_serving_InferenceResult_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_serving_MultiInferenceRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_serving_MultiInferenceRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_serving_MultiInferenceResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_serving_MultiInferenceResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\'tensorflow_serving/apis/inference.prot" +
      "o\022\022tensorflow.serving\032,tensorflow_servin" +
      "g/apis/classification.proto\032#tensorflow_" +
      "serving/apis/input.proto\032#tensorflow_ser" +
      "ving/apis/model.proto\032(tensorflow_servin" +
      "g/apis/regression.proto\"W\n\rInferenceTask" +
      "\0221\n\nmodel_spec\030\001 \001(\0132\035.tensorflow.servin" +
      "g.ModelSpec\022\023\n\013method_name\030\002 \001(\t\"\334\001\n\017Inf" +
      "erenceResult\0221\n\nmodel_spec\030\001 \001(\0132\035.tenso" +
      "rflow.serving.ModelSpec\022I\n\025classificatio" +
      "n_result\030\002 \001(\0132(.tensorflow.serving.Clas" +
      "sificationResultH\000\022A\n\021regression_result\030" +
      "\003 \001(\0132$.tensorflow.serving.RegressionRes" +
      "ultH\000B\010\n\006result\"s\n\025MultiInferenceRequest" +
      "\0220\n\005tasks\030\001 \003(\0132!.tensorflow.serving.Inf" +
      "erenceTask\022(\n\005input\030\002 \001(\0132\031.tensorflow.s" +
      "erving.Input\"N\n\026MultiInferenceResponse\0224" +
      "\n\007results\030\001 \003(\0132#.tensorflow.serving.Inf" +
      "erenceResultB\003\370\001\001b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          tensorflow.serving.Classification.getDescriptor(),
          tensorflow.serving.InputOuterClass.getDescriptor(),
          tensorflow.serving.Model.getDescriptor(),
          tensorflow.serving.RegressionOuterClass.getDescriptor(),
        });
    internal_static_tensorflow_serving_InferenceTask_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_tensorflow_serving_InferenceTask_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_serving_InferenceTask_descriptor,
        new java.lang.String[] { "ModelSpec", "MethodName", });
    internal_static_tensorflow_serving_InferenceResult_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_tensorflow_serving_InferenceResult_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_serving_InferenceResult_descriptor,
        new java.lang.String[] { "ModelSpec", "ClassificationResult", "RegressionResult", "Result", });
    internal_static_tensorflow_serving_MultiInferenceRequest_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_tensorflow_serving_MultiInferenceRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_serving_MultiInferenceRequest_descriptor,
        new java.lang.String[] { "Tasks", "Input", });
    internal_static_tensorflow_serving_MultiInferenceResponse_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_tensorflow_serving_MultiInferenceResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_serving_MultiInferenceResponse_descriptor,
        new java.lang.String[] { "Results", });
    tensorflow.serving.Classification.getDescriptor();
    tensorflow.serving.InputOuterClass.getDescriptor();
    tensorflow.serving.Model.getDescriptor();
    tensorflow.serving.RegressionOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
