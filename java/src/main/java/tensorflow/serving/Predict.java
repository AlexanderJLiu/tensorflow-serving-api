// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow_serving/apis/predict.proto

package tensorflow.serving;

public final class Predict {
  private Predict() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface PredictRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.serving.PredictRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Model Specification. If version is not specified, will use the latest
     * (numerical) version.
     * </pre>
     *
     * <code>.tensorflow.serving.ModelSpec model_spec = 1;</code>
     * @return Whether the modelSpec field is set.
     */
    boolean hasModelSpec();
    /**
     * <pre>
     * Model Specification. If version is not specified, will use the latest
     * (numerical) version.
     * </pre>
     *
     * <code>.tensorflow.serving.ModelSpec model_spec = 1;</code>
     * @return The modelSpec.
     */
    tensorflow.serving.Model.ModelSpec getModelSpec();
    /**
     * <pre>
     * Model Specification. If version is not specified, will use the latest
     * (numerical) version.
     * </pre>
     *
     * <code>.tensorflow.serving.ModelSpec model_spec = 1;</code>
     */
    tensorflow.serving.Model.ModelSpecOrBuilder getModelSpecOrBuilder();

    /**
     * <pre>
     * Input tensors.
     * Names of input tensor are alias names. The mapping from aliases to real
     * input tensor names is stored in the SavedModel export as a prediction
     * SignatureDef under the 'inputs' field.
     * </pre>
     *
     * <code>map&lt;string, .tensorflow.TensorProto&gt; inputs = 2;</code>
     */
    int getInputsCount();
    /**
     * <pre>
     * Input tensors.
     * Names of input tensor are alias names. The mapping from aliases to real
     * input tensor names is stored in the SavedModel export as a prediction
     * SignatureDef under the 'inputs' field.
     * </pre>
     *
     * <code>map&lt;string, .tensorflow.TensorProto&gt; inputs = 2;</code>
     */
    boolean containsInputs(
        java.lang.String key);
    /**
     * Use {@link #getInputsMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, org.tensorflow.framework.TensorProto>
    getInputs();
    /**
     * <pre>
     * Input tensors.
     * Names of input tensor are alias names. The mapping from aliases to real
     * input tensor names is stored in the SavedModel export as a prediction
     * SignatureDef under the 'inputs' field.
     * </pre>
     *
     * <code>map&lt;string, .tensorflow.TensorProto&gt; inputs = 2;</code>
     */
    java.util.Map<java.lang.String, org.tensorflow.framework.TensorProto>
    getInputsMap();
    /**
     * <pre>
     * Input tensors.
     * Names of input tensor are alias names. The mapping from aliases to real
     * input tensor names is stored in the SavedModel export as a prediction
     * SignatureDef under the 'inputs' field.
     * </pre>
     *
     * <code>map&lt;string, .tensorflow.TensorProto&gt; inputs = 2;</code>
     */

    org.tensorflow.framework.TensorProto getInputsOrDefault(
        java.lang.String key,
        org.tensorflow.framework.TensorProto defaultValue);
    /**
     * <pre>
     * Input tensors.
     * Names of input tensor are alias names. The mapping from aliases to real
     * input tensor names is stored in the SavedModel export as a prediction
     * SignatureDef under the 'inputs' field.
     * </pre>
     *
     * <code>map&lt;string, .tensorflow.TensorProto&gt; inputs = 2;</code>
     */

    org.tensorflow.framework.TensorProto getInputsOrThrow(
        java.lang.String key);

    /**
     * <pre>
     * Output filter.
     * Names specified are alias names. The mapping from aliases to real output
     * tensor names is stored in the SavedModel export as a prediction
     * SignatureDef under the 'outputs' field.
     * Only tensors specified here will be run/fetched and returned, with the
     * exception that when none is specified, all tensors specified in the
     * named signature will be run/fetched and returned.
     * </pre>
     *
     * <code>repeated string output_filter = 3;</code>
     * @return A list containing the outputFilter.
     */
    java.util.List<java.lang.String>
        getOutputFilterList();
    /**
     * <pre>
     * Output filter.
     * Names specified are alias names. The mapping from aliases to real output
     * tensor names is stored in the SavedModel export as a prediction
     * SignatureDef under the 'outputs' field.
     * Only tensors specified here will be run/fetched and returned, with the
     * exception that when none is specified, all tensors specified in the
     * named signature will be run/fetched and returned.
     * </pre>
     *
     * <code>repeated string output_filter = 3;</code>
     * @return The count of outputFilter.
     */
    int getOutputFilterCount();
    /**
     * <pre>
     * Output filter.
     * Names specified are alias names. The mapping from aliases to real output
     * tensor names is stored in the SavedModel export as a prediction
     * SignatureDef under the 'outputs' field.
     * Only tensors specified here will be run/fetched and returned, with the
     * exception that when none is specified, all tensors specified in the
     * named signature will be run/fetched and returned.
     * </pre>
     *
     * <code>repeated string output_filter = 3;</code>
     * @param index The index of the element to return.
     * @return The outputFilter at the given index.
     */
    java.lang.String getOutputFilter(int index);
    /**
     * <pre>
     * Output filter.
     * Names specified are alias names. The mapping from aliases to real output
     * tensor names is stored in the SavedModel export as a prediction
     * SignatureDef under the 'outputs' field.
     * Only tensors specified here will be run/fetched and returned, with the
     * exception that when none is specified, all tensors specified in the
     * named signature will be run/fetched and returned.
     * </pre>
     *
     * <code>repeated string output_filter = 3;</code>
     * @param index The index of the value to return.
     * @return The bytes of the outputFilter at the given index.
     */
    com.google.protobuf.ByteString
        getOutputFilterBytes(int index);
  }
  /**
   * <pre>
   * PredictRequest specifies which TensorFlow model to run, as well as
   * how inputs are mapped to tensors and how outputs are filtered before
   * returning to user.
   * </pre>
   *
   * Protobuf type {@code tensorflow.serving.PredictRequest}
   */
  public static final class PredictRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.serving.PredictRequest)
      PredictRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PredictRequest.newBuilder() to construct.
    private PredictRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PredictRequest() {
      outputFilter_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new PredictRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PredictRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              tensorflow.serving.Model.ModelSpec.Builder subBuilder = null;
              if (modelSpec_ != null) {
                subBuilder = modelSpec_.toBuilder();
              }
              modelSpec_ = input.readMessage(tensorflow.serving.Model.ModelSpec.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(modelSpec_);
                modelSpec_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                inputs_ = com.google.protobuf.MapField.newMapField(
                    InputsDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.String, org.tensorflow.framework.TensorProto>
              inputs__ = input.readMessage(
                  InputsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              inputs_.getMutableMap().put(
                  inputs__.getKey(), inputs__.getValue());
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                outputFilter_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000002;
              }
              outputFilter_.add(s);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          outputFilter_ = outputFilter_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.serving.Predict.internal_static_tensorflow_serving_PredictRequest_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 2:
          return internalGetInputs();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.serving.Predict.internal_static_tensorflow_serving_PredictRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.serving.Predict.PredictRequest.class, tensorflow.serving.Predict.PredictRequest.Builder.class);
    }

    public static final int MODEL_SPEC_FIELD_NUMBER = 1;
    private tensorflow.serving.Model.ModelSpec modelSpec_;
    /**
     * <pre>
     * Model Specification. If version is not specified, will use the latest
     * (numerical) version.
     * </pre>
     *
     * <code>.tensorflow.serving.ModelSpec model_spec = 1;</code>
     * @return Whether the modelSpec field is set.
     */
    @java.lang.Override
    public boolean hasModelSpec() {
      return modelSpec_ != null;
    }
    /**
     * <pre>
     * Model Specification. If version is not specified, will use the latest
     * (numerical) version.
     * </pre>
     *
     * <code>.tensorflow.serving.ModelSpec model_spec = 1;</code>
     * @return The modelSpec.
     */
    @java.lang.Override
    public tensorflow.serving.Model.ModelSpec getModelSpec() {
      return modelSpec_ == null ? tensorflow.serving.Model.ModelSpec.getDefaultInstance() : modelSpec_;
    }
    /**
     * <pre>
     * Model Specification. If version is not specified, will use the latest
     * (numerical) version.
     * </pre>
     *
     * <code>.tensorflow.serving.ModelSpec model_spec = 1;</code>
     */
    @java.lang.Override
    public tensorflow.serving.Model.ModelSpecOrBuilder getModelSpecOrBuilder() {
      return getModelSpec();
    }

    public static final int INPUTS_FIELD_NUMBER = 2;
    private static final class InputsDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, org.tensorflow.framework.TensorProto> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, org.tensorflow.framework.TensorProto>newDefaultInstance(
                  tensorflow.serving.Predict.internal_static_tensorflow_serving_PredictRequest_InputsEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  org.tensorflow.framework.TensorProto.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.String, org.tensorflow.framework.TensorProto> inputs_;
    private com.google.protobuf.MapField<java.lang.String, org.tensorflow.framework.TensorProto>
    internalGetInputs() {
      if (inputs_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            InputsDefaultEntryHolder.defaultEntry);
      }
      return inputs_;
    }

    public int getInputsCount() {
      return internalGetInputs().getMap().size();
    }
    /**
     * <pre>
     * Input tensors.
     * Names of input tensor are alias names. The mapping from aliases to real
     * input tensor names is stored in the SavedModel export as a prediction
     * SignatureDef under the 'inputs' field.
     * </pre>
     *
     * <code>map&lt;string, .tensorflow.TensorProto&gt; inputs = 2;</code>
     */

    @java.lang.Override
    public boolean containsInputs(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetInputs().getMap().containsKey(key);
    }
    /**
     * Use {@link #getInputsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, org.tensorflow.framework.TensorProto> getInputs() {
      return getInputsMap();
    }
    /**
     * <pre>
     * Input tensors.
     * Names of input tensor are alias names. The mapping from aliases to real
     * input tensor names is stored in the SavedModel export as a prediction
     * SignatureDef under the 'inputs' field.
     * </pre>
     *
     * <code>map&lt;string, .tensorflow.TensorProto&gt; inputs = 2;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, org.tensorflow.framework.TensorProto> getInputsMap() {
      return internalGetInputs().getMap();
    }
    /**
     * <pre>
     * Input tensors.
     * Names of input tensor are alias names. The mapping from aliases to real
     * input tensor names is stored in the SavedModel export as a prediction
     * SignatureDef under the 'inputs' field.
     * </pre>
     *
     * <code>map&lt;string, .tensorflow.TensorProto&gt; inputs = 2;</code>
     */
    @java.lang.Override

    public org.tensorflow.framework.TensorProto getInputsOrDefault(
        java.lang.String key,
        org.tensorflow.framework.TensorProto defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, org.tensorflow.framework.TensorProto> map =
          internalGetInputs().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Input tensors.
     * Names of input tensor are alias names. The mapping from aliases to real
     * input tensor names is stored in the SavedModel export as a prediction
     * SignatureDef under the 'inputs' field.
     * </pre>
     *
     * <code>map&lt;string, .tensorflow.TensorProto&gt; inputs = 2;</code>
     */
    @java.lang.Override

    public org.tensorflow.framework.TensorProto getInputsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, org.tensorflow.framework.TensorProto> map =
          internalGetInputs().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int OUTPUT_FILTER_FIELD_NUMBER = 3;
    private com.google.protobuf.LazyStringList outputFilter_;
    /**
     * <pre>
     * Output filter.
     * Names specified are alias names. The mapping from aliases to real output
     * tensor names is stored in the SavedModel export as a prediction
     * SignatureDef under the 'outputs' field.
     * Only tensors specified here will be run/fetched and returned, with the
     * exception that when none is specified, all tensors specified in the
     * named signature will be run/fetched and returned.
     * </pre>
     *
     * <code>repeated string output_filter = 3;</code>
     * @return A list containing the outputFilter.
     */
    public com.google.protobuf.ProtocolStringList
        getOutputFilterList() {
      return outputFilter_;
    }
    /**
     * <pre>
     * Output filter.
     * Names specified are alias names. The mapping from aliases to real output
     * tensor names is stored in the SavedModel export as a prediction
     * SignatureDef under the 'outputs' field.
     * Only tensors specified here will be run/fetched and returned, with the
     * exception that when none is specified, all tensors specified in the
     * named signature will be run/fetched and returned.
     * </pre>
     *
     * <code>repeated string output_filter = 3;</code>
     * @return The count of outputFilter.
     */
    public int getOutputFilterCount() {
      return outputFilter_.size();
    }
    /**
     * <pre>
     * Output filter.
     * Names specified are alias names. The mapping from aliases to real output
     * tensor names is stored in the SavedModel export as a prediction
     * SignatureDef under the 'outputs' field.
     * Only tensors specified here will be run/fetched and returned, with the
     * exception that when none is specified, all tensors specified in the
     * named signature will be run/fetched and returned.
     * </pre>
     *
     * <code>repeated string output_filter = 3;</code>
     * @param index The index of the element to return.
     * @return The outputFilter at the given index.
     */
    public java.lang.String getOutputFilter(int index) {
      return outputFilter_.get(index);
    }
    /**
     * <pre>
     * Output filter.
     * Names specified are alias names. The mapping from aliases to real output
     * tensor names is stored in the SavedModel export as a prediction
     * SignatureDef under the 'outputs' field.
     * Only tensors specified here will be run/fetched and returned, with the
     * exception that when none is specified, all tensors specified in the
     * named signature will be run/fetched and returned.
     * </pre>
     *
     * <code>repeated string output_filter = 3;</code>
     * @param index The index of the value to return.
     * @return The bytes of the outputFilter at the given index.
     */
    public com.google.protobuf.ByteString
        getOutputFilterBytes(int index) {
      return outputFilter_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (modelSpec_ != null) {
        output.writeMessage(1, getModelSpec());
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetInputs(),
          InputsDefaultEntryHolder.defaultEntry,
          2);
      for (int i = 0; i < outputFilter_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, outputFilter_.getRaw(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (modelSpec_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getModelSpec());
      }
      for (java.util.Map.Entry<java.lang.String, org.tensorflow.framework.TensorProto> entry
           : internalGetInputs().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, org.tensorflow.framework.TensorProto>
        inputs__ = InputsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, inputs__);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < outputFilter_.size(); i++) {
          dataSize += computeStringSizeNoTag(outputFilter_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getOutputFilterList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.serving.Predict.PredictRequest)) {
        return super.equals(obj);
      }
      tensorflow.serving.Predict.PredictRequest other = (tensorflow.serving.Predict.PredictRequest) obj;

      if (hasModelSpec() != other.hasModelSpec()) return false;
      if (hasModelSpec()) {
        if (!getModelSpec()
            .equals(other.getModelSpec())) return false;
      }
      if (!internalGetInputs().equals(
          other.internalGetInputs())) return false;
      if (!getOutputFilterList()
          .equals(other.getOutputFilterList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasModelSpec()) {
        hash = (37 * hash) + MODEL_SPEC_FIELD_NUMBER;
        hash = (53 * hash) + getModelSpec().hashCode();
      }
      if (!internalGetInputs().getMap().isEmpty()) {
        hash = (37 * hash) + INPUTS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetInputs().hashCode();
      }
      if (getOutputFilterCount() > 0) {
        hash = (37 * hash) + OUTPUT_FILTER_FIELD_NUMBER;
        hash = (53 * hash) + getOutputFilterList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.serving.Predict.PredictRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.serving.Predict.PredictRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.serving.Predict.PredictRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.serving.Predict.PredictRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.serving.Predict.PredictRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.serving.Predict.PredictRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.serving.Predict.PredictRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.serving.Predict.PredictRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.serving.Predict.PredictRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tensorflow.serving.Predict.PredictRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.serving.Predict.PredictRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.serving.Predict.PredictRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.serving.Predict.PredictRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * PredictRequest specifies which TensorFlow model to run, as well as
     * how inputs are mapped to tensors and how outputs are filtered before
     * returning to user.
     * </pre>
     *
     * Protobuf type {@code tensorflow.serving.PredictRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.serving.PredictRequest)
        tensorflow.serving.Predict.PredictRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.serving.Predict.internal_static_tensorflow_serving_PredictRequest_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 2:
            return internalGetInputs();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 2:
            return internalGetMutableInputs();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.serving.Predict.internal_static_tensorflow_serving_PredictRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.serving.Predict.PredictRequest.class, tensorflow.serving.Predict.PredictRequest.Builder.class);
      }

      // Construct using tensorflow.serving.Predict.PredictRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (modelSpecBuilder_ == null) {
          modelSpec_ = null;
        } else {
          modelSpec_ = null;
          modelSpecBuilder_ = null;
        }
        internalGetMutableInputs().clear();
        outputFilter_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.serving.Predict.internal_static_tensorflow_serving_PredictRequest_descriptor;
      }

      @java.lang.Override
      public tensorflow.serving.Predict.PredictRequest getDefaultInstanceForType() {
        return tensorflow.serving.Predict.PredictRequest.getDefaultInstance();
      }

      @java.lang.Override
      public tensorflow.serving.Predict.PredictRequest build() {
        tensorflow.serving.Predict.PredictRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public tensorflow.serving.Predict.PredictRequest buildPartial() {
        tensorflow.serving.Predict.PredictRequest result = new tensorflow.serving.Predict.PredictRequest(this);
        int from_bitField0_ = bitField0_;
        if (modelSpecBuilder_ == null) {
          result.modelSpec_ = modelSpec_;
        } else {
          result.modelSpec_ = modelSpecBuilder_.build();
        }
        result.inputs_ = internalGetInputs();
        result.inputs_.makeImmutable();
        if (((bitField0_ & 0x00000002) != 0)) {
          outputFilter_ = outputFilter_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.outputFilter_ = outputFilter_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.serving.Predict.PredictRequest) {
          return mergeFrom((tensorflow.serving.Predict.PredictRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.serving.Predict.PredictRequest other) {
        if (other == tensorflow.serving.Predict.PredictRequest.getDefaultInstance()) return this;
        if (other.hasModelSpec()) {
          mergeModelSpec(other.getModelSpec());
        }
        internalGetMutableInputs().mergeFrom(
            other.internalGetInputs());
        if (!other.outputFilter_.isEmpty()) {
          if (outputFilter_.isEmpty()) {
            outputFilter_ = other.outputFilter_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureOutputFilterIsMutable();
            outputFilter_.addAll(other.outputFilter_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tensorflow.serving.Predict.PredictRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tensorflow.serving.Predict.PredictRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private tensorflow.serving.Model.ModelSpec modelSpec_;
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.serving.Model.ModelSpec, tensorflow.serving.Model.ModelSpec.Builder, tensorflow.serving.Model.ModelSpecOrBuilder> modelSpecBuilder_;
      /**
       * <pre>
       * Model Specification. If version is not specified, will use the latest
       * (numerical) version.
       * </pre>
       *
       * <code>.tensorflow.serving.ModelSpec model_spec = 1;</code>
       * @return Whether the modelSpec field is set.
       */
      public boolean hasModelSpec() {
        return modelSpecBuilder_ != null || modelSpec_ != null;
      }
      /**
       * <pre>
       * Model Specification. If version is not specified, will use the latest
       * (numerical) version.
       * </pre>
       *
       * <code>.tensorflow.serving.ModelSpec model_spec = 1;</code>
       * @return The modelSpec.
       */
      public tensorflow.serving.Model.ModelSpec getModelSpec() {
        if (modelSpecBuilder_ == null) {
          return modelSpec_ == null ? tensorflow.serving.Model.ModelSpec.getDefaultInstance() : modelSpec_;
        } else {
          return modelSpecBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Model Specification. If version is not specified, will use the latest
       * (numerical) version.
       * </pre>
       *
       * <code>.tensorflow.serving.ModelSpec model_spec = 1;</code>
       */
      public Builder setModelSpec(tensorflow.serving.Model.ModelSpec value) {
        if (modelSpecBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          modelSpec_ = value;
          onChanged();
        } else {
          modelSpecBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Model Specification. If version is not specified, will use the latest
       * (numerical) version.
       * </pre>
       *
       * <code>.tensorflow.serving.ModelSpec model_spec = 1;</code>
       */
      public Builder setModelSpec(
          tensorflow.serving.Model.ModelSpec.Builder builderForValue) {
        if (modelSpecBuilder_ == null) {
          modelSpec_ = builderForValue.build();
          onChanged();
        } else {
          modelSpecBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Model Specification. If version is not specified, will use the latest
       * (numerical) version.
       * </pre>
       *
       * <code>.tensorflow.serving.ModelSpec model_spec = 1;</code>
       */
      public Builder mergeModelSpec(tensorflow.serving.Model.ModelSpec value) {
        if (modelSpecBuilder_ == null) {
          if (modelSpec_ != null) {
            modelSpec_ =
              tensorflow.serving.Model.ModelSpec.newBuilder(modelSpec_).mergeFrom(value).buildPartial();
          } else {
            modelSpec_ = value;
          }
          onChanged();
        } else {
          modelSpecBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Model Specification. If version is not specified, will use the latest
       * (numerical) version.
       * </pre>
       *
       * <code>.tensorflow.serving.ModelSpec model_spec = 1;</code>
       */
      public Builder clearModelSpec() {
        if (modelSpecBuilder_ == null) {
          modelSpec_ = null;
          onChanged();
        } else {
          modelSpec_ = null;
          modelSpecBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Model Specification. If version is not specified, will use the latest
       * (numerical) version.
       * </pre>
       *
       * <code>.tensorflow.serving.ModelSpec model_spec = 1;</code>
       */
      public tensorflow.serving.Model.ModelSpec.Builder getModelSpecBuilder() {
        
        onChanged();
        return getModelSpecFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Model Specification. If version is not specified, will use the latest
       * (numerical) version.
       * </pre>
       *
       * <code>.tensorflow.serving.ModelSpec model_spec = 1;</code>
       */
      public tensorflow.serving.Model.ModelSpecOrBuilder getModelSpecOrBuilder() {
        if (modelSpecBuilder_ != null) {
          return modelSpecBuilder_.getMessageOrBuilder();
        } else {
          return modelSpec_ == null ?
              tensorflow.serving.Model.ModelSpec.getDefaultInstance() : modelSpec_;
        }
      }
      /**
       * <pre>
       * Model Specification. If version is not specified, will use the latest
       * (numerical) version.
       * </pre>
       *
       * <code>.tensorflow.serving.ModelSpec model_spec = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.serving.Model.ModelSpec, tensorflow.serving.Model.ModelSpec.Builder, tensorflow.serving.Model.ModelSpecOrBuilder> 
          getModelSpecFieldBuilder() {
        if (modelSpecBuilder_ == null) {
          modelSpecBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              tensorflow.serving.Model.ModelSpec, tensorflow.serving.Model.ModelSpec.Builder, tensorflow.serving.Model.ModelSpecOrBuilder>(
                  getModelSpec(),
                  getParentForChildren(),
                  isClean());
          modelSpec_ = null;
        }
        return modelSpecBuilder_;
      }

      private com.google.protobuf.MapField<
          java.lang.String, org.tensorflow.framework.TensorProto> inputs_;
      private com.google.protobuf.MapField<java.lang.String, org.tensorflow.framework.TensorProto>
      internalGetInputs() {
        if (inputs_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              InputsDefaultEntryHolder.defaultEntry);
        }
        return inputs_;
      }
      private com.google.protobuf.MapField<java.lang.String, org.tensorflow.framework.TensorProto>
      internalGetMutableInputs() {
        onChanged();;
        if (inputs_ == null) {
          inputs_ = com.google.protobuf.MapField.newMapField(
              InputsDefaultEntryHolder.defaultEntry);
        }
        if (!inputs_.isMutable()) {
          inputs_ = inputs_.copy();
        }
        return inputs_;
      }

      public int getInputsCount() {
        return internalGetInputs().getMap().size();
      }
      /**
       * <pre>
       * Input tensors.
       * Names of input tensor are alias names. The mapping from aliases to real
       * input tensor names is stored in the SavedModel export as a prediction
       * SignatureDef under the 'inputs' field.
       * </pre>
       *
       * <code>map&lt;string, .tensorflow.TensorProto&gt; inputs = 2;</code>
       */

      @java.lang.Override
      public boolean containsInputs(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetInputs().getMap().containsKey(key);
      }
      /**
       * Use {@link #getInputsMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, org.tensorflow.framework.TensorProto> getInputs() {
        return getInputsMap();
      }
      /**
       * <pre>
       * Input tensors.
       * Names of input tensor are alias names. The mapping from aliases to real
       * input tensor names is stored in the SavedModel export as a prediction
       * SignatureDef under the 'inputs' field.
       * </pre>
       *
       * <code>map&lt;string, .tensorflow.TensorProto&gt; inputs = 2;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.String, org.tensorflow.framework.TensorProto> getInputsMap() {
        return internalGetInputs().getMap();
      }
      /**
       * <pre>
       * Input tensors.
       * Names of input tensor are alias names. The mapping from aliases to real
       * input tensor names is stored in the SavedModel export as a prediction
       * SignatureDef under the 'inputs' field.
       * </pre>
       *
       * <code>map&lt;string, .tensorflow.TensorProto&gt; inputs = 2;</code>
       */
      @java.lang.Override

      public org.tensorflow.framework.TensorProto getInputsOrDefault(
          java.lang.String key,
          org.tensorflow.framework.TensorProto defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, org.tensorflow.framework.TensorProto> map =
            internalGetInputs().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * Input tensors.
       * Names of input tensor are alias names. The mapping from aliases to real
       * input tensor names is stored in the SavedModel export as a prediction
       * SignatureDef under the 'inputs' field.
       * </pre>
       *
       * <code>map&lt;string, .tensorflow.TensorProto&gt; inputs = 2;</code>
       */
      @java.lang.Override

      public org.tensorflow.framework.TensorProto getInputsOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, org.tensorflow.framework.TensorProto> map =
            internalGetInputs().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearInputs() {
        internalGetMutableInputs().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * Input tensors.
       * Names of input tensor are alias names. The mapping from aliases to real
       * input tensor names is stored in the SavedModel export as a prediction
       * SignatureDef under the 'inputs' field.
       * </pre>
       *
       * <code>map&lt;string, .tensorflow.TensorProto&gt; inputs = 2;</code>
       */

      public Builder removeInputs(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableInputs().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, org.tensorflow.framework.TensorProto>
      getMutableInputs() {
        return internalGetMutableInputs().getMutableMap();
      }
      /**
       * <pre>
       * Input tensors.
       * Names of input tensor are alias names. The mapping from aliases to real
       * input tensor names is stored in the SavedModel export as a prediction
       * SignatureDef under the 'inputs' field.
       * </pre>
       *
       * <code>map&lt;string, .tensorflow.TensorProto&gt; inputs = 2;</code>
       */
      public Builder putInputs(
          java.lang.String key,
          org.tensorflow.framework.TensorProto value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableInputs().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * Input tensors.
       * Names of input tensor are alias names. The mapping from aliases to real
       * input tensor names is stored in the SavedModel export as a prediction
       * SignatureDef under the 'inputs' field.
       * </pre>
       *
       * <code>map&lt;string, .tensorflow.TensorProto&gt; inputs = 2;</code>
       */

      public Builder putAllInputs(
          java.util.Map<java.lang.String, org.tensorflow.framework.TensorProto> values) {
        internalGetMutableInputs().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.LazyStringList outputFilter_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureOutputFilterIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          outputFilter_ = new com.google.protobuf.LazyStringArrayList(outputFilter_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <pre>
       * Output filter.
       * Names specified are alias names. The mapping from aliases to real output
       * tensor names is stored in the SavedModel export as a prediction
       * SignatureDef under the 'outputs' field.
       * Only tensors specified here will be run/fetched and returned, with the
       * exception that when none is specified, all tensors specified in the
       * named signature will be run/fetched and returned.
       * </pre>
       *
       * <code>repeated string output_filter = 3;</code>
       * @return A list containing the outputFilter.
       */
      public com.google.protobuf.ProtocolStringList
          getOutputFilterList() {
        return outputFilter_.getUnmodifiableView();
      }
      /**
       * <pre>
       * Output filter.
       * Names specified are alias names. The mapping from aliases to real output
       * tensor names is stored in the SavedModel export as a prediction
       * SignatureDef under the 'outputs' field.
       * Only tensors specified here will be run/fetched and returned, with the
       * exception that when none is specified, all tensors specified in the
       * named signature will be run/fetched and returned.
       * </pre>
       *
       * <code>repeated string output_filter = 3;</code>
       * @return The count of outputFilter.
       */
      public int getOutputFilterCount() {
        return outputFilter_.size();
      }
      /**
       * <pre>
       * Output filter.
       * Names specified are alias names. The mapping from aliases to real output
       * tensor names is stored in the SavedModel export as a prediction
       * SignatureDef under the 'outputs' field.
       * Only tensors specified here will be run/fetched and returned, with the
       * exception that when none is specified, all tensors specified in the
       * named signature will be run/fetched and returned.
       * </pre>
       *
       * <code>repeated string output_filter = 3;</code>
       * @param index The index of the element to return.
       * @return The outputFilter at the given index.
       */
      public java.lang.String getOutputFilter(int index) {
        return outputFilter_.get(index);
      }
      /**
       * <pre>
       * Output filter.
       * Names specified are alias names. The mapping from aliases to real output
       * tensor names is stored in the SavedModel export as a prediction
       * SignatureDef under the 'outputs' field.
       * Only tensors specified here will be run/fetched and returned, with the
       * exception that when none is specified, all tensors specified in the
       * named signature will be run/fetched and returned.
       * </pre>
       *
       * <code>repeated string output_filter = 3;</code>
       * @param index The index of the value to return.
       * @return The bytes of the outputFilter at the given index.
       */
      public com.google.protobuf.ByteString
          getOutputFilterBytes(int index) {
        return outputFilter_.getByteString(index);
      }
      /**
       * <pre>
       * Output filter.
       * Names specified are alias names. The mapping from aliases to real output
       * tensor names is stored in the SavedModel export as a prediction
       * SignatureDef under the 'outputs' field.
       * Only tensors specified here will be run/fetched and returned, with the
       * exception that when none is specified, all tensors specified in the
       * named signature will be run/fetched and returned.
       * </pre>
       *
       * <code>repeated string output_filter = 3;</code>
       * @param index The index to set the value at.
       * @param value The outputFilter to set.
       * @return This builder for chaining.
       */
      public Builder setOutputFilter(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureOutputFilterIsMutable();
        outputFilter_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Output filter.
       * Names specified are alias names. The mapping from aliases to real output
       * tensor names is stored in the SavedModel export as a prediction
       * SignatureDef under the 'outputs' field.
       * Only tensors specified here will be run/fetched and returned, with the
       * exception that when none is specified, all tensors specified in the
       * named signature will be run/fetched and returned.
       * </pre>
       *
       * <code>repeated string output_filter = 3;</code>
       * @param value The outputFilter to add.
       * @return This builder for chaining.
       */
      public Builder addOutputFilter(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureOutputFilterIsMutable();
        outputFilter_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Output filter.
       * Names specified are alias names. The mapping from aliases to real output
       * tensor names is stored in the SavedModel export as a prediction
       * SignatureDef under the 'outputs' field.
       * Only tensors specified here will be run/fetched and returned, with the
       * exception that when none is specified, all tensors specified in the
       * named signature will be run/fetched and returned.
       * </pre>
       *
       * <code>repeated string output_filter = 3;</code>
       * @param values The outputFilter to add.
       * @return This builder for chaining.
       */
      public Builder addAllOutputFilter(
          java.lang.Iterable<java.lang.String> values) {
        ensureOutputFilterIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, outputFilter_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Output filter.
       * Names specified are alias names. The mapping from aliases to real output
       * tensor names is stored in the SavedModel export as a prediction
       * SignatureDef under the 'outputs' field.
       * Only tensors specified here will be run/fetched and returned, with the
       * exception that when none is specified, all tensors specified in the
       * named signature will be run/fetched and returned.
       * </pre>
       *
       * <code>repeated string output_filter = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearOutputFilter() {
        outputFilter_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Output filter.
       * Names specified are alias names. The mapping from aliases to real output
       * tensor names is stored in the SavedModel export as a prediction
       * SignatureDef under the 'outputs' field.
       * Only tensors specified here will be run/fetched and returned, with the
       * exception that when none is specified, all tensors specified in the
       * named signature will be run/fetched and returned.
       * </pre>
       *
       * <code>repeated string output_filter = 3;</code>
       * @param value The bytes of the outputFilter to add.
       * @return This builder for chaining.
       */
      public Builder addOutputFilterBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureOutputFilterIsMutable();
        outputFilter_.add(value);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.serving.PredictRequest)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.serving.PredictRequest)
    private static final tensorflow.serving.Predict.PredictRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.serving.Predict.PredictRequest();
    }

    public static tensorflow.serving.Predict.PredictRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PredictRequest>
        PARSER = new com.google.protobuf.AbstractParser<PredictRequest>() {
      @java.lang.Override
      public PredictRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PredictRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PredictRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PredictRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public tensorflow.serving.Predict.PredictRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PredictResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.serving.PredictResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Effective Model Specification used to process PredictRequest.
     * </pre>
     *
     * <code>.tensorflow.serving.ModelSpec model_spec = 2;</code>
     * @return Whether the modelSpec field is set.
     */
    boolean hasModelSpec();
    /**
     * <pre>
     * Effective Model Specification used to process PredictRequest.
     * </pre>
     *
     * <code>.tensorflow.serving.ModelSpec model_spec = 2;</code>
     * @return The modelSpec.
     */
    tensorflow.serving.Model.ModelSpec getModelSpec();
    /**
     * <pre>
     * Effective Model Specification used to process PredictRequest.
     * </pre>
     *
     * <code>.tensorflow.serving.ModelSpec model_spec = 2;</code>
     */
    tensorflow.serving.Model.ModelSpecOrBuilder getModelSpecOrBuilder();

    /**
     * <pre>
     * Output tensors.
     * </pre>
     *
     * <code>map&lt;string, .tensorflow.TensorProto&gt; outputs = 1;</code>
     */
    int getOutputsCount();
    /**
     * <pre>
     * Output tensors.
     * </pre>
     *
     * <code>map&lt;string, .tensorflow.TensorProto&gt; outputs = 1;</code>
     */
    boolean containsOutputs(
        java.lang.String key);
    /**
     * Use {@link #getOutputsMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, org.tensorflow.framework.TensorProto>
    getOutputs();
    /**
     * <pre>
     * Output tensors.
     * </pre>
     *
     * <code>map&lt;string, .tensorflow.TensorProto&gt; outputs = 1;</code>
     */
    java.util.Map<java.lang.String, org.tensorflow.framework.TensorProto>
    getOutputsMap();
    /**
     * <pre>
     * Output tensors.
     * </pre>
     *
     * <code>map&lt;string, .tensorflow.TensorProto&gt; outputs = 1;</code>
     */

    org.tensorflow.framework.TensorProto getOutputsOrDefault(
        java.lang.String key,
        org.tensorflow.framework.TensorProto defaultValue);
    /**
     * <pre>
     * Output tensors.
     * </pre>
     *
     * <code>map&lt;string, .tensorflow.TensorProto&gt; outputs = 1;</code>
     */

    org.tensorflow.framework.TensorProto getOutputsOrThrow(
        java.lang.String key);
  }
  /**
   * <pre>
   * Response for PredictRequest on successful run.
   * </pre>
   *
   * Protobuf type {@code tensorflow.serving.PredictResponse}
   */
  public static final class PredictResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.serving.PredictResponse)
      PredictResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PredictResponse.newBuilder() to construct.
    private PredictResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PredictResponse() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new PredictResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PredictResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                outputs_ = com.google.protobuf.MapField.newMapField(
                    OutputsDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.String, org.tensorflow.framework.TensorProto>
              outputs__ = input.readMessage(
                  OutputsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              outputs_.getMutableMap().put(
                  outputs__.getKey(), outputs__.getValue());
              break;
            }
            case 18: {
              tensorflow.serving.Model.ModelSpec.Builder subBuilder = null;
              if (modelSpec_ != null) {
                subBuilder = modelSpec_.toBuilder();
              }
              modelSpec_ = input.readMessage(tensorflow.serving.Model.ModelSpec.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(modelSpec_);
                modelSpec_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.serving.Predict.internal_static_tensorflow_serving_PredictResponse_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetOutputs();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.serving.Predict.internal_static_tensorflow_serving_PredictResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.serving.Predict.PredictResponse.class, tensorflow.serving.Predict.PredictResponse.Builder.class);
    }

    public static final int MODEL_SPEC_FIELD_NUMBER = 2;
    private tensorflow.serving.Model.ModelSpec modelSpec_;
    /**
     * <pre>
     * Effective Model Specification used to process PredictRequest.
     * </pre>
     *
     * <code>.tensorflow.serving.ModelSpec model_spec = 2;</code>
     * @return Whether the modelSpec field is set.
     */
    @java.lang.Override
    public boolean hasModelSpec() {
      return modelSpec_ != null;
    }
    /**
     * <pre>
     * Effective Model Specification used to process PredictRequest.
     * </pre>
     *
     * <code>.tensorflow.serving.ModelSpec model_spec = 2;</code>
     * @return The modelSpec.
     */
    @java.lang.Override
    public tensorflow.serving.Model.ModelSpec getModelSpec() {
      return modelSpec_ == null ? tensorflow.serving.Model.ModelSpec.getDefaultInstance() : modelSpec_;
    }
    /**
     * <pre>
     * Effective Model Specification used to process PredictRequest.
     * </pre>
     *
     * <code>.tensorflow.serving.ModelSpec model_spec = 2;</code>
     */
    @java.lang.Override
    public tensorflow.serving.Model.ModelSpecOrBuilder getModelSpecOrBuilder() {
      return getModelSpec();
    }

    public static final int OUTPUTS_FIELD_NUMBER = 1;
    private static final class OutputsDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, org.tensorflow.framework.TensorProto> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, org.tensorflow.framework.TensorProto>newDefaultInstance(
                  tensorflow.serving.Predict.internal_static_tensorflow_serving_PredictResponse_OutputsEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  org.tensorflow.framework.TensorProto.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.String, org.tensorflow.framework.TensorProto> outputs_;
    private com.google.protobuf.MapField<java.lang.String, org.tensorflow.framework.TensorProto>
    internalGetOutputs() {
      if (outputs_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            OutputsDefaultEntryHolder.defaultEntry);
      }
      return outputs_;
    }

    public int getOutputsCount() {
      return internalGetOutputs().getMap().size();
    }
    /**
     * <pre>
     * Output tensors.
     * </pre>
     *
     * <code>map&lt;string, .tensorflow.TensorProto&gt; outputs = 1;</code>
     */

    @java.lang.Override
    public boolean containsOutputs(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetOutputs().getMap().containsKey(key);
    }
    /**
     * Use {@link #getOutputsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, org.tensorflow.framework.TensorProto> getOutputs() {
      return getOutputsMap();
    }
    /**
     * <pre>
     * Output tensors.
     * </pre>
     *
     * <code>map&lt;string, .tensorflow.TensorProto&gt; outputs = 1;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, org.tensorflow.framework.TensorProto> getOutputsMap() {
      return internalGetOutputs().getMap();
    }
    /**
     * <pre>
     * Output tensors.
     * </pre>
     *
     * <code>map&lt;string, .tensorflow.TensorProto&gt; outputs = 1;</code>
     */
    @java.lang.Override

    public org.tensorflow.framework.TensorProto getOutputsOrDefault(
        java.lang.String key,
        org.tensorflow.framework.TensorProto defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, org.tensorflow.framework.TensorProto> map =
          internalGetOutputs().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Output tensors.
     * </pre>
     *
     * <code>map&lt;string, .tensorflow.TensorProto&gt; outputs = 1;</code>
     */
    @java.lang.Override

    public org.tensorflow.framework.TensorProto getOutputsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, org.tensorflow.framework.TensorProto> map =
          internalGetOutputs().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetOutputs(),
          OutputsDefaultEntryHolder.defaultEntry,
          1);
      if (modelSpec_ != null) {
        output.writeMessage(2, getModelSpec());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<java.lang.String, org.tensorflow.framework.TensorProto> entry
           : internalGetOutputs().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, org.tensorflow.framework.TensorProto>
        outputs__ = OutputsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, outputs__);
      }
      if (modelSpec_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getModelSpec());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.serving.Predict.PredictResponse)) {
        return super.equals(obj);
      }
      tensorflow.serving.Predict.PredictResponse other = (tensorflow.serving.Predict.PredictResponse) obj;

      if (hasModelSpec() != other.hasModelSpec()) return false;
      if (hasModelSpec()) {
        if (!getModelSpec()
            .equals(other.getModelSpec())) return false;
      }
      if (!internalGetOutputs().equals(
          other.internalGetOutputs())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasModelSpec()) {
        hash = (37 * hash) + MODEL_SPEC_FIELD_NUMBER;
        hash = (53 * hash) + getModelSpec().hashCode();
      }
      if (!internalGetOutputs().getMap().isEmpty()) {
        hash = (37 * hash) + OUTPUTS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetOutputs().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.serving.Predict.PredictResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.serving.Predict.PredictResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.serving.Predict.PredictResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.serving.Predict.PredictResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.serving.Predict.PredictResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.serving.Predict.PredictResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.serving.Predict.PredictResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.serving.Predict.PredictResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.serving.Predict.PredictResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tensorflow.serving.Predict.PredictResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.serving.Predict.PredictResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.serving.Predict.PredictResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.serving.Predict.PredictResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Response for PredictRequest on successful run.
     * </pre>
     *
     * Protobuf type {@code tensorflow.serving.PredictResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.serving.PredictResponse)
        tensorflow.serving.Predict.PredictResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.serving.Predict.internal_static_tensorflow_serving_PredictResponse_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetOutputs();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetMutableOutputs();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.serving.Predict.internal_static_tensorflow_serving_PredictResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.serving.Predict.PredictResponse.class, tensorflow.serving.Predict.PredictResponse.Builder.class);
      }

      // Construct using tensorflow.serving.Predict.PredictResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (modelSpecBuilder_ == null) {
          modelSpec_ = null;
        } else {
          modelSpec_ = null;
          modelSpecBuilder_ = null;
        }
        internalGetMutableOutputs().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.serving.Predict.internal_static_tensorflow_serving_PredictResponse_descriptor;
      }

      @java.lang.Override
      public tensorflow.serving.Predict.PredictResponse getDefaultInstanceForType() {
        return tensorflow.serving.Predict.PredictResponse.getDefaultInstance();
      }

      @java.lang.Override
      public tensorflow.serving.Predict.PredictResponse build() {
        tensorflow.serving.Predict.PredictResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public tensorflow.serving.Predict.PredictResponse buildPartial() {
        tensorflow.serving.Predict.PredictResponse result = new tensorflow.serving.Predict.PredictResponse(this);
        int from_bitField0_ = bitField0_;
        if (modelSpecBuilder_ == null) {
          result.modelSpec_ = modelSpec_;
        } else {
          result.modelSpec_ = modelSpecBuilder_.build();
        }
        result.outputs_ = internalGetOutputs();
        result.outputs_.makeImmutable();
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.serving.Predict.PredictResponse) {
          return mergeFrom((tensorflow.serving.Predict.PredictResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.serving.Predict.PredictResponse other) {
        if (other == tensorflow.serving.Predict.PredictResponse.getDefaultInstance()) return this;
        if (other.hasModelSpec()) {
          mergeModelSpec(other.getModelSpec());
        }
        internalGetMutableOutputs().mergeFrom(
            other.internalGetOutputs());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tensorflow.serving.Predict.PredictResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tensorflow.serving.Predict.PredictResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private tensorflow.serving.Model.ModelSpec modelSpec_;
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.serving.Model.ModelSpec, tensorflow.serving.Model.ModelSpec.Builder, tensorflow.serving.Model.ModelSpecOrBuilder> modelSpecBuilder_;
      /**
       * <pre>
       * Effective Model Specification used to process PredictRequest.
       * </pre>
       *
       * <code>.tensorflow.serving.ModelSpec model_spec = 2;</code>
       * @return Whether the modelSpec field is set.
       */
      public boolean hasModelSpec() {
        return modelSpecBuilder_ != null || modelSpec_ != null;
      }
      /**
       * <pre>
       * Effective Model Specification used to process PredictRequest.
       * </pre>
       *
       * <code>.tensorflow.serving.ModelSpec model_spec = 2;</code>
       * @return The modelSpec.
       */
      public tensorflow.serving.Model.ModelSpec getModelSpec() {
        if (modelSpecBuilder_ == null) {
          return modelSpec_ == null ? tensorflow.serving.Model.ModelSpec.getDefaultInstance() : modelSpec_;
        } else {
          return modelSpecBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Effective Model Specification used to process PredictRequest.
       * </pre>
       *
       * <code>.tensorflow.serving.ModelSpec model_spec = 2;</code>
       */
      public Builder setModelSpec(tensorflow.serving.Model.ModelSpec value) {
        if (modelSpecBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          modelSpec_ = value;
          onChanged();
        } else {
          modelSpecBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Effective Model Specification used to process PredictRequest.
       * </pre>
       *
       * <code>.tensorflow.serving.ModelSpec model_spec = 2;</code>
       */
      public Builder setModelSpec(
          tensorflow.serving.Model.ModelSpec.Builder builderForValue) {
        if (modelSpecBuilder_ == null) {
          modelSpec_ = builderForValue.build();
          onChanged();
        } else {
          modelSpecBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Effective Model Specification used to process PredictRequest.
       * </pre>
       *
       * <code>.tensorflow.serving.ModelSpec model_spec = 2;</code>
       */
      public Builder mergeModelSpec(tensorflow.serving.Model.ModelSpec value) {
        if (modelSpecBuilder_ == null) {
          if (modelSpec_ != null) {
            modelSpec_ =
              tensorflow.serving.Model.ModelSpec.newBuilder(modelSpec_).mergeFrom(value).buildPartial();
          } else {
            modelSpec_ = value;
          }
          onChanged();
        } else {
          modelSpecBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Effective Model Specification used to process PredictRequest.
       * </pre>
       *
       * <code>.tensorflow.serving.ModelSpec model_spec = 2;</code>
       */
      public Builder clearModelSpec() {
        if (modelSpecBuilder_ == null) {
          modelSpec_ = null;
          onChanged();
        } else {
          modelSpec_ = null;
          modelSpecBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Effective Model Specification used to process PredictRequest.
       * </pre>
       *
       * <code>.tensorflow.serving.ModelSpec model_spec = 2;</code>
       */
      public tensorflow.serving.Model.ModelSpec.Builder getModelSpecBuilder() {
        
        onChanged();
        return getModelSpecFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Effective Model Specification used to process PredictRequest.
       * </pre>
       *
       * <code>.tensorflow.serving.ModelSpec model_spec = 2;</code>
       */
      public tensorflow.serving.Model.ModelSpecOrBuilder getModelSpecOrBuilder() {
        if (modelSpecBuilder_ != null) {
          return modelSpecBuilder_.getMessageOrBuilder();
        } else {
          return modelSpec_ == null ?
              tensorflow.serving.Model.ModelSpec.getDefaultInstance() : modelSpec_;
        }
      }
      /**
       * <pre>
       * Effective Model Specification used to process PredictRequest.
       * </pre>
       *
       * <code>.tensorflow.serving.ModelSpec model_spec = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.serving.Model.ModelSpec, tensorflow.serving.Model.ModelSpec.Builder, tensorflow.serving.Model.ModelSpecOrBuilder> 
          getModelSpecFieldBuilder() {
        if (modelSpecBuilder_ == null) {
          modelSpecBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              tensorflow.serving.Model.ModelSpec, tensorflow.serving.Model.ModelSpec.Builder, tensorflow.serving.Model.ModelSpecOrBuilder>(
                  getModelSpec(),
                  getParentForChildren(),
                  isClean());
          modelSpec_ = null;
        }
        return modelSpecBuilder_;
      }

      private com.google.protobuf.MapField<
          java.lang.String, org.tensorflow.framework.TensorProto> outputs_;
      private com.google.protobuf.MapField<java.lang.String, org.tensorflow.framework.TensorProto>
      internalGetOutputs() {
        if (outputs_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              OutputsDefaultEntryHolder.defaultEntry);
        }
        return outputs_;
      }
      private com.google.protobuf.MapField<java.lang.String, org.tensorflow.framework.TensorProto>
      internalGetMutableOutputs() {
        onChanged();;
        if (outputs_ == null) {
          outputs_ = com.google.protobuf.MapField.newMapField(
              OutputsDefaultEntryHolder.defaultEntry);
        }
        if (!outputs_.isMutable()) {
          outputs_ = outputs_.copy();
        }
        return outputs_;
      }

      public int getOutputsCount() {
        return internalGetOutputs().getMap().size();
      }
      /**
       * <pre>
       * Output tensors.
       * </pre>
       *
       * <code>map&lt;string, .tensorflow.TensorProto&gt; outputs = 1;</code>
       */

      @java.lang.Override
      public boolean containsOutputs(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetOutputs().getMap().containsKey(key);
      }
      /**
       * Use {@link #getOutputsMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, org.tensorflow.framework.TensorProto> getOutputs() {
        return getOutputsMap();
      }
      /**
       * <pre>
       * Output tensors.
       * </pre>
       *
       * <code>map&lt;string, .tensorflow.TensorProto&gt; outputs = 1;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.String, org.tensorflow.framework.TensorProto> getOutputsMap() {
        return internalGetOutputs().getMap();
      }
      /**
       * <pre>
       * Output tensors.
       * </pre>
       *
       * <code>map&lt;string, .tensorflow.TensorProto&gt; outputs = 1;</code>
       */
      @java.lang.Override

      public org.tensorflow.framework.TensorProto getOutputsOrDefault(
          java.lang.String key,
          org.tensorflow.framework.TensorProto defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, org.tensorflow.framework.TensorProto> map =
            internalGetOutputs().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * Output tensors.
       * </pre>
       *
       * <code>map&lt;string, .tensorflow.TensorProto&gt; outputs = 1;</code>
       */
      @java.lang.Override

      public org.tensorflow.framework.TensorProto getOutputsOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, org.tensorflow.framework.TensorProto> map =
            internalGetOutputs().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearOutputs() {
        internalGetMutableOutputs().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * Output tensors.
       * </pre>
       *
       * <code>map&lt;string, .tensorflow.TensorProto&gt; outputs = 1;</code>
       */

      public Builder removeOutputs(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableOutputs().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, org.tensorflow.framework.TensorProto>
      getMutableOutputs() {
        return internalGetMutableOutputs().getMutableMap();
      }
      /**
       * <pre>
       * Output tensors.
       * </pre>
       *
       * <code>map&lt;string, .tensorflow.TensorProto&gt; outputs = 1;</code>
       */
      public Builder putOutputs(
          java.lang.String key,
          org.tensorflow.framework.TensorProto value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableOutputs().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * Output tensors.
       * </pre>
       *
       * <code>map&lt;string, .tensorflow.TensorProto&gt; outputs = 1;</code>
       */

      public Builder putAllOutputs(
          java.util.Map<java.lang.String, org.tensorflow.framework.TensorProto> values) {
        internalGetMutableOutputs().getMutableMap()
            .putAll(values);
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.serving.PredictResponse)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.serving.PredictResponse)
    private static final tensorflow.serving.Predict.PredictResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.serving.Predict.PredictResponse();
    }

    public static tensorflow.serving.Predict.PredictResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PredictResponse>
        PARSER = new com.google.protobuf.AbstractParser<PredictResponse>() {
      @java.lang.Override
      public PredictResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PredictResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PredictResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PredictResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public tensorflow.serving.Predict.PredictResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_serving_PredictRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_serving_PredictRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_serving_PredictRequest_InputsEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_serving_PredictRequest_InputsEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_serving_PredictResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_serving_PredictResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_serving_PredictResponse_OutputsEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_serving_PredictResponse_OutputsEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n%tensorflow_serving/apis/predict.proto\022" +
      "\022tensorflow.serving\032&tensorflow/core/fra" +
      "mework/tensor.proto\032#tensorflow_serving/" +
      "apis/model.proto\"\342\001\n\016PredictRequest\0221\n\nm" +
      "odel_spec\030\001 \001(\0132\035.tensorflow.serving.Mod" +
      "elSpec\022>\n\006inputs\030\002 \003(\0132..tensorflow.serv" +
      "ing.PredictRequest.InputsEntry\022\025\n\routput" +
      "_filter\030\003 \003(\t\032F\n\013InputsEntry\022\013\n\003key\030\001 \001(" +
      "\t\022&\n\005value\030\002 \001(\0132\027.tensorflow.TensorProt" +
      "o:\0028\001\"\320\001\n\017PredictResponse\0221\n\nmodel_spec\030" +
      "\002 \001(\0132\035.tensorflow.serving.ModelSpec\022A\n\007" +
      "outputs\030\001 \003(\01320.tensorflow.serving.Predi" +
      "ctResponse.OutputsEntry\032G\n\014OutputsEntry\022" +
      "\013\n\003key\030\001 \001(\t\022&\n\005value\030\002 \001(\0132\027.tensorflow" +
      ".TensorProto:\0028\001B\003\370\001\001b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.tensorflow.framework.TensorProtos.getDescriptor(),
          tensorflow.serving.Model.getDescriptor(),
        });
    internal_static_tensorflow_serving_PredictRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_tensorflow_serving_PredictRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_serving_PredictRequest_descriptor,
        new java.lang.String[] { "ModelSpec", "Inputs", "OutputFilter", });
    internal_static_tensorflow_serving_PredictRequest_InputsEntry_descriptor =
      internal_static_tensorflow_serving_PredictRequest_descriptor.getNestedTypes().get(0);
    internal_static_tensorflow_serving_PredictRequest_InputsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_serving_PredictRequest_InputsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_tensorflow_serving_PredictResponse_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_tensorflow_serving_PredictResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_serving_PredictResponse_descriptor,
        new java.lang.String[] { "ModelSpec", "Outputs", });
    internal_static_tensorflow_serving_PredictResponse_OutputsEntry_descriptor =
      internal_static_tensorflow_serving_PredictResponse_descriptor.getNestedTypes().get(0);
    internal_static_tensorflow_serving_PredictResponse_OutputsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_serving_PredictResponse_OutputsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    org.tensorflow.framework.TensorProtos.getDescriptor();
    tensorflow.serving.Model.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
